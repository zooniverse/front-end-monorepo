{"version":3,"sources":["../../src/components/media-card.jsx"],"names":["IMAGE_EXTENSIONS","VIDEO_EXTENSIONS","MediaCard","srcExtension","props","src","split","pop","toLowerCase","mediaRender","indexOf","console","warn","className","trim","children","React","Component","propTypes","PropTypes","string","defaultProps"],"mappings":";;;;;;;;;;AAAA;;;;AACA;;;;;;;;;;;;AAEA,IAAMA,mBAAmB,CAAC,KAAD,EAAQ,MAAR,EAAgB,KAAhB,EAAuB,KAAvB,EAA8B,KAA9B,CAAzB;;AAEA,IAAMC,mBAAmB,CAAC,KAAD,CAAzB;;IAEqBC,S;;;;;;;;;;;6BACV;AACP,UAAMC,eAAe,KAAKC,KAAL,CAAWC,GAAX,CAAeC,KAAf,CAAqB,GAArB,EAA0BC,GAA1B,GAAgCC,WAAhC,EAArB;AACA,UAAIC,oBAAJ;AACA,UAAIT,iBAAiBU,OAAjB,CAAyBP,YAAzB,KAA0C,CAA9C,EAAiD;AAC/CM,sBAAc,uCAAK,WAAU,kBAAf,EAAkC,KAAK,KAAKL,KAAL,CAAWC,GAAlD,GAAd;AACD,OAFD,MAEO,IAAIJ,iBAAiBS,OAAjB,CAAyBP,YAAzB,KAA0C,CAA9C,EAAiD;AACtDM,sBACE;AAAA;AAAA,YAAO,WAAU,kBAAjB,EAAoC,KAAK,KAAKL,KAAL,CAAWC,GAApD;AACE;AAAA;AAAA;AAAA;AAAA;AADF,SADF;AAKD,OANM,MAMA;AACLM,gBAAQC,IAAR,6BAAuC,KAAKR,KAAL,CAAWC,GAAlD;AACA,eAAO,IAAP;AACD;;AAED,aACE;AAAA;AAAA,qBAAS,KAAKD,KAAd,IAAqB,WAAW,iBAAc,KAAKA,KAAL,CAAWS,SAAzB,EAAqCC,IAArC,EAAhC;AACG,aAAKV,KAAL,CAAWC,GAAX,IACC;AAAA;AAAA,YAAK,WAAU,mBAAf;AACGI;AADH,SAFJ;AAOG,aAAKL,KAAL,CAAWW,QAAX,IACC;AAAA;AAAA,YAAK,WAAU,oBAAf;AAAqC,eAAKX,KAAL,CAAWW;AAAhD;AARJ,OADF;AAaD;;;;EA9BoCC,gBAAMC,S;;kBAAxBf,S;;;AAiCrBA,UAAUgB,SAAV,GAAsB;AACpBb,OAAKc,oBAAUC;AADK,CAAtB;;AAIAlB,UAAUmB,YAAV,GAAyB;AACvBhB,OAAK;AADkB,CAAzB","file":"media-card.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst IMAGE_EXTENSIONS = ['gif', 'jpeg', 'jpg', 'png', 'svg'];\n\nconst VIDEO_EXTENSIONS = ['mp4'];\n\nexport default class MediaCard extends React.Component {\n  render() {\n    const srcExtension = this.props.src.split('.').pop().toLowerCase();\n    let mediaRender;\n    if (IMAGE_EXTENSIONS.indexOf(srcExtension) >= 0) {\n      mediaRender = <img className=\"media-card-media\" src={this.props.src} />;\n    } else if (VIDEO_EXTENSIONS.indexOf(srcExtension) >= 0) {\n      mediaRender = (\n        <video className=\"media-card-media\" src={this.props.src}>\n          <p>Your browser does not support this video format.</p>\n        </video>\n      )\n    } else {\n      console.warn(`Not sure how to render ${this.props.src}`);\n      return null;\n    }\n\n    return (\n      <div {...this.props} className={`media-card ${this.props.className}`.trim()}>\n        {this.props.src && (\n          <div className=\"media-card-header\">\n            {mediaRender}\n          </div>\n        )}\n\n        {this.props.children && (\n          <div className=\"media-card-content\">{this.props.children}</div>\n        )}\n      </div>\n    )\n  }\n}\n\nMediaCard.propTypes = {\n  src: PropTypes.string\n}\n\nMediaCard.defaultProps = {\n  src: ''\n};\n"]}