{"version":3,"sources":["../../src/components/step-through.jsx"],"names":["StepThrough","props","goPrevious","bind","goNext","goTo","handleStep","handleKeyDown","renderControls","state","render","step","defaultStep","swiper","swipe","prev","handleScroll","next","index","slide","total","setState","e","which","preventDefault","reactSwipeNode","childrenCount","allSteps","Array","from","keys","map","thisStep","React","Children","count","children","swipeOptions","startSlide","continuous","callback","Component","propTypes","PropTypes","number","defaultProps"],"mappings":"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","file":"step-through.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\n// TODO fix issue with react-swipe\n// import ReactSwipe from 'react-swipe';\n// TODO fix issue with animated-scrollto\n// import animatedScrollTo from 'animated-scrollto';\n\nclass StepThrough extends Component {\n  constructor(props) {\n    super(props);\n    this.goPrevious = this.goPrevious.bind(this);\n    this.goNext = this.goNext.bind(this);\n    this.goTo = this.goTo.bind(this);\n    this.handleStep = this.handleStep.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.renderControls = this.renderControls.bind(this);\n    this.state = {\n      render: false,\n      step: props.defaultStep,\n    };\n  }\n\n  // componentDidMount() {\n  //   addEventListener('keydown', this.handleKeyDown);\n  //   this.swiper.swipe.setup();\n  // }\n\n  // componentWillUnmount() {\n  //   removeEventListener('keydown', this.handleKeyDown);\n  // }\n\n  goPrevious() {\n    this.swiper.swipe.prev();\n    this.handleScroll();\n  }\n\n  goNext() {\n    this.swiper.swipe.next();\n    this.handleScroll();\n  }\n\n  goTo(index) {\n    this.swiper.swipe.slide(index);\n    this.handleScroll();\n  }\n\n  handleStep(total, index) {\n    this.setState({\n      step: (index % total + total) % total,\n    });\n  }\n\n  handleKeyDown(e) {\n    switch (e.which) {\n      // left\n      case 37:\n        e.preventDefault();\n        this.goPrevious();\n        break;\n      // right\n      case 39:\n        e.preventDefault();\n        this.goNext();\n        break;\n    }\n  }\n\n  handleScroll() {\n    const reactSwipeNode = this.swiper;\n    // setTimeout(animatedScrollTo(reactSwipeNode, reactSwipeNode.offsetTop, 0), 500);\n  }\n\n  renderControls(childrenCount) {\n    if (childrenCount === 1) {\n      return null;\n    } else {\n      const allSteps = Array.from(Array(childrenCount).keys());\n      return (\n        <div className=\"step-through-controls\">\n          <button\n            type=\"button\"\n            className=\"step-through-direction step-through-previous\"\n            aria-label=\"Previous step\"\n            title=\"Previous\"\n            disabled={this.state.step === 0}\n            onClick={this.goPrevious}\n          >\n            ◀\n          </button>\n\n          <span className=\"step-through-pips\">\n            {allSteps.map(thisStep =>\n              <label key={thisStep} className=\"step-through-pip\" title={`Step ${thisStep + 1}`}>\n                <input\n                  type=\"radio\"\n                  className=\"step-through-pip-input\"\n                  aria-label={`Step ${thisStep + 1} of ${childrenCount}`}\n                  checked={thisStep === this.state.step}\n                  autoFocus={thisStep === this.state.step}\n                  onChange={this.goTo.bind(this, thisStep)}\n                />\n                <span className=\"step-through-pip-number\">{thisStep + 1}</span>\n              </label>\n            )}\n          </span>\n\n          <button\n            type=\"button\"\n            className=\"step-through-direction step-through-next\"\n            aria-label=\"Next step\"\n            title=\"Next\"\n            disabled={this.state.step === childrenCount - 1}\n            onClick={this.goNext}\n          >\n            ▶\n          </button>\n\n        </div>\n      );\n    }\n  }\n\n  render() {\n    const childrenCount = React.Children.count(this.props.children);\n    const swipeOptions = {\n      startSlide: this.state.step,\n      continuous: false,\n      callback: this.handleStep.bind(this, childrenCount),\n    };\n    // return (\n    //   <div className=\"step-through\" className={this.props.className} style={this.props.style}>\n    //     <ReactSwipe\n    //       ref={(el) => { this.swiper = el; }}\n    //       className=\"step-through-content\"\n    //       swipeOptions={swipeOptions}\n    //     >\n    //       {this.props.children}\n    //     </ReactSwipe>\n    //     {this.renderControls(childrenCount)}\n    //   </div>\n    // );\n  }\n}\n\nStepThrough.propTypes = {\n  defaultStep: PropTypes.number,\n}\n\nStepThrough.defaultProps = {\n  defaultStep: 0,\n}\n\nexport default StepThrough;\n"]}