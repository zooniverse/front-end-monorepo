{"version":3,"sources":["../../src/components/paginator.jsx"],"names":["pageOption","n","Paginator","className","firstAndLast","firstLabel","itemCount","lastLabel","nextLabel","onClickNext","onClickPrev","onPageChange","page","pageCount","pageKey","pageSelector","previousLabel","router","selectionText","totalItems","pageChange","activePage","queryChange","clickPrev","clickNext","paginatorClassName","trim","e","target","value","Array","keys","map","i","defaultProps","propTypes","PropTypes","string","bool","oneOfType","node","func","number","shape","push"],"mappings":"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","file":"paginator.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport updateQueryParams from '../lib/update-query-params';\n\nconst pageOption = n =>\n  <option key={n} value={n}>\n    {n}\n  </option>;\n\nconst Paginator = ({\n  className,\n  firstAndLast,\n  firstLabel,\n  itemCount,\n  lastLabel,\n  nextLabel,\n  onClickNext,\n  onClickPrev,\n  onPageChange,\n  page,\n  pageCount,\n  pageKey,\n  pageSelector,\n  previousLabel,\n  router,\n  selectionText,\n  totalItems,\n}) => {\n  let pageChange;\n  if (router && !onPageChange) {\n    pageChange = (activePage) => {\n      const queryChange = {};\n      queryChange[pageKey] = activePage;\n      updateQueryParams(router, queryChange);\n    };\n  } else {\n    pageChange = onPageChange;\n  }\n\n  let clickPrev;\n  if (onClickPrev) {\n    clickPrev = () => {\n      onClickPrev(page);\n    };\n  } else {\n    clickPrev = () => {\n      pageChange(page - 1);\n    };\n  }\n\n  let clickNext;\n  if (onClickNext) {\n    clickNext = () => {\n      onClickNext(page);\n    };\n  } else {\n    clickNext = () => {\n      pageChange(page + 1);\n    };\n  }\n\n  const paginatorClassName = `paginator ${className}`.trim();\n\n  return (\n    <div className={paginatorClassName}>\n      {firstAndLast &&\n        (<button\n          type=\"button\"\n          id=\"first\"\n          className=\"paginator-button\"\n          onClick={() => pageChange(1)}\n          disabled={page === 1}\n        >\n          {firstLabel}\n        </button>)}\n\n      <button\n        type=\"button\"\n        id=\"previous\"\n        className=\"paginator-button\"\n        disabled={page === 1}\n        onClick={() => clickPrev()}\n      >\n        {previousLabel}\n      </button>\n\n      {pageSelector &&\n        (<div className=\"paginator-page-selector\">\n          PAGE\n          <select\n            value={page}\n            onChange={(e) => { pageChange(e.target.value); }}\n          >\n            {[...Array(pageCount).keys()].map(i => pageOption(i + 1))}\n          </select>{selectionText} {pageCount}\n        </div>)}\n\n      {itemCount && totalItems &&\n        (<div className=\"paginator-page-selector\">\n          {totalItems}\n        </div>)}\n\n      <button\n        type=\"button\"\n        id=\"next\"\n        className=\"paginator-button\"\n        disabled={page === pageCount}\n        onClick={() => clickNext()}\n      >\n        {nextLabel}\n      </button>\n\n      {firstAndLast &&\n        (<button\n          type=\"button\"\n          id=\"last\"\n          className=\"paginator-button\"\n          onClick={() => pageChange(pageCount)}\n          disabled={page === pageCount}\n        >\n          {lastLabel}\n        </button>)}\n\n    </div>\n  );\n};\n\nPaginator.defaultProps = {\n  className: '',\n  firstAndLast: true,\n  firstLabel: <span className=\"paginator-label\"><span className=\"paginator-icon\">&laquo;</span> first</span>,\n  itemCount: false,\n  lastLabel: <span className=\"paginator-label\">last <span className=\"paginator-icon\">&raquo;</span></span>,\n  nextLabel: <span className=\"paginator-label\">next <span className=\"paginator-icon\">&rsaquo;</span></span>,\n  page: 1,\n  pageKey: 'page',\n  pageSelector: true,\n  previousLabel: <span className=\"paginator-label\"><span className=\"paginator-icon\">&lsaquo;</span> previous</span>,\n  selectionText: 'OF'\n};\n\nPaginator.propTypes = {\n  className: PropTypes.string,\n  firstAndLast: PropTypes.bool,\n  firstLabel: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.string,\n  ]),\n  itemCount: PropTypes.bool,\n  lastLabel: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.string,\n  ]),\n  nextLabel: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.string,\n  ]),\n  onClickNext: PropTypes.func,\n  onClickPrev: PropTypes.func,\n  onPageChange: PropTypes.func,\n  page: PropTypes.number,\n  pageCount: PropTypes.number,\n  pageKey: PropTypes.string,\n  pageSelector: PropTypes.bool,\n  previousLabel: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.string,\n  ]),\n  router: PropTypes.shape({\n    push: PropTypes.func,\n  }),\n  selectionText: PropTypes.string,\n  totalItems: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.string,\n  ]),\n};\n\nexport default Paginator;\n"]}