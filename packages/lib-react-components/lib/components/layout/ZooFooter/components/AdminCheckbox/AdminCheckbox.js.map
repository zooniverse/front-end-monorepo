{"version":3,"sources":["../../../../../../src/components/layout/ZooFooter/components/AdminCheckbox/AdminCheckbox.jsx"],"names":["counterpart","registerTranslations","en","AdminCheckbox","checked","colorTheme","label","onChange","theme","mode","defaultProps","zooTheme","propTypes","PropTypes","bool","oneOf","string","func","object"],"mappings":";;;;;;AAAA;;;;AACA;;;;AAEA;;AACA;;AAEA;;;;AACA;;;;AAEA;;;;;;AAEAA,sBAAYC,oBAAZ,CAAiC,IAAjC,EAAuCC,YAAvC;;AAGA,SAASC,aAAT,OAAwE;AAAA,MAA/CC,OAA+C,QAA/CA,OAA+C;AAAA,MAAtCC,UAAsC,QAAtCA,UAAsC;AAAA,MAA1BC,KAA0B,QAA1BA,KAA0B;AAAA,MAAnBC,QAAmB,QAAnBA,QAAmB;AAAA,MAATC,KAAS,QAATA,KAAS;;AACtE,SACE;AAAC,oBAAD;AAAA,MAAS,OAAOA,KAAhB;AACE;AAAC,qCAAD;AAAA,QAAe,OAAO,EAAEC,MAAMJ,UAAR,EAAtB;AACE,oCAAC,iBAAD;AACE,iBAASD,OADX;AAEE,YAAG,gBAFL;AAGE,cAAK,gBAHP;AAIE,eAAOE,KAJT;AAKE,kBAAUC,QALZ;AAME,gBAAQ;AANV;AADF;AADF,GADF;AAcD;;AAEDJ,cAAcO,YAAd,GAA6B;AAC3BN,WAAS,KADkB;AAE3BC,cAAY,OAFe;AAG3BC,SAAO,2BAAY,qBAAZ,CAHoB;AAI3BC,YAAU,oBAAM,CAAE,CAJS;AAK3BC,SAAOG;AALoB,CAA7B;;AAQAR,cAAcS,SAAd,GAA0B;AACxBR,WAASS,oBAAUC,IADK;AAExBT,cAAYQ,oBAAUE,KAAV,CAAgB,CAAC,OAAD,EAAU,MAAV,CAAhB,CAFY;AAGxBT,SAAOO,oBAAUG,MAHO;AAIxBT,YAAUM,oBAAUI,IAJI;AAKxBT,SAAOK,oBAAUK;AALO,CAA1B;;kBAQef,a","file":"AdminCheckbox.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { CheckBox, Grommet } from 'grommet';\nimport { ThemeProvider } from 'styled-components';\n\nimport counterpart from 'counterpart';\nimport en from './locales/en';\n\nimport zooTheme from '@zooniverse/grommet-theme';\n\ncounterpart.registerTranslations('en', en)\n\n\nfunction AdminCheckbox({ checked, colorTheme, label, onChange, theme }) {\n  return (\n    <Grommet theme={theme}>\n      <ThemeProvider theme={{ mode: colorTheme }}>\n        <CheckBox\n          checked={checked}\n          id=\"admin-checkbox\"\n          name=\"admin-checkbox\"\n          label={label}\n          onChange={onChange}\n          toggle={true}\n        />\n      </ThemeProvider>\n    </Grommet>\n  );\n};\n\nAdminCheckbox.defaultProps = {\n  checked: false,\n  colorTheme: 'light',\n  label: counterpart('AdminCheckbox.label'),\n  onChange: () => {},\n  theme: zooTheme\n};\n\nAdminCheckbox.propTypes = {\n  checked: PropTypes.bool,\n  colorTheme: PropTypes.oneOf(['light', 'dark']),\n  label: PropTypes.string,\n  onChange: PropTypes.func,\n  theme: PropTypes.object\n};\n\nexport default AdminCheckbox;"]}