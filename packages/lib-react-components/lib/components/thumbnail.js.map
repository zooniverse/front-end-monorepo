{"version":3,"sources":["../../src/components/thumbnail.jsx"],"names":["MAX_THUMBNAIL_DIMENSION","Thumbnail","props","state","failed","handleError","bind","origin","width","height","src","srcPath","split","pop","setState","getThumbnailSrc","dimensions","style","maxWidth","maxHeight","format","React","Component","defaultProps","propTypes","PropTypes","string","number"],"mappings":";;;;;;;;;;AAAA;;;;AACA;;;;;;;;;;;;AAEA,IAAMA,0BAA0B,GAAhC;;IAEqBC,S;;;AACnB,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA,sHACXA,KADW;;AAGjB,UAAKC,KAAL,GAAa;AACXC,cAAQ;AADG,KAAb;;AAIA,UAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBC,IAAjB,OAAnB;AAPiB;AAQlB;;;;0CAE+C;AAAA,UAA9BC,MAA8B,QAA9BA,MAA8B;AAAA,UAAtBC,KAAsB,QAAtBA,KAAsB;AAAA,UAAfC,MAAe,QAAfA,MAAe;AAAA,UAAPC,GAAO,QAAPA,GAAO;AAAE;AAChD,UAAMC,UAAUD,IAAIE,KAAJ,CAAU,IAAV,EAAgBC,GAAhB,EAAhB;AACA,aAAWN,MAAX,SAAqBC,KAArB,SAA8BC,MAA9B,SAAwCE,OAAxC;AACD;;;kCAEa;AACZ,UAAI,CAAC,KAAKR,KAAL,CAAWC,MAAhB,EAAwB;AACtB,aAAKU,QAAL,CAAc,EAAEV,QAAQ,IAAV,EAAd;AACD;AACF;;;6BAEQ;AACP,UAAMM,MAAM,KAAKP,KAAL,CAAWC,MAAX,GAAoB,KAAKF,KAAL,CAAWQ,GAA/B,GAAqC,KAAKK,eAAL,CAAqB,KAAKb,KAA1B,CAAjD;;AAEA,UAAMc,aAAa;AACjBR,eAAO,IADU;AAEjBC,gBAAQ;AAFS,OAAnB;;AAKA,UAAMQ,QAAQ;AACZC,kBAAU,KAAKhB,KAAL,CAAWM,KADT;AAEZW,mBAAW,KAAKjB,KAAL,CAAWO;AAFV,OAAd;;AAKA,UAAI,KAAKP,KAAL,CAAWkB,MAAX,KAAsB,KAA1B,EAAiC;AAC/B,eACE;AAAA;AAAA;AACE;AAAA;AAAA,cAAO,OAAM,KAAb,EAAmB,cAAnB;AACE,sDAAQ,KAAK,KAAKlB,KAAL,CAAWQ,GAAxB,EAA6B,MAAK,WAAlC;AADF;AADF,SADF;AAOD;;AAED,aACE,gDAAK,KAAI,EAAT,IAAgB,KAAKR,KAArB,IAA4B,KAAKQ,GAAjC,IAA0CM,UAA1C,IAAsD,OAAOC,KAA7D,EAAoE,SAAS,KAAKZ,WAAlF,IADF;AAGD;;;;EAhDoCgB,gBAAMC,S;;kBAAxBrB,S;;;AAmDrBA,UAAUsB,YAAV,GAAyB;AACvBH,UAAQ,OADe;AAEvBX,UAAQT,uBAFe;AAGvBO,UAAQ,mCAHe;AAIvBG,OAAK,EAJkB;AAKvBF,SAAOR;AALgB,CAAzB;;AAQAC,UAAUuB,SAAV,GAAsB;AACpBJ,UAAQK,oBAAUC,MADE;AAEpBjB,UAAQgB,oBAAUE,MAFE;AAGpBpB,UAAQkB,oBAAUC,MAHE;AAIpBhB,OAAKe,oBAAUC,MAJK;AAKpBlB,SAAOiB,oBAAUE;AALG,CAAtB","file":"thumbnail.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst MAX_THUMBNAIL_DIMENSION = 999;\n\nexport default class Thumbnail extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      failed: false,\n    };\n\n    this.handleError = this.handleError.bind(this);\n  }\n\n  getThumbnailSrc({ origin, width, height, src }) { // eslint-disable-line class-methods-use-this\n    const srcPath = src.split('//').pop();\n    return (`${origin}/${width}x${height}/${srcPath}`);\n  }\n\n  handleError() {\n    if (!this.state.failed) {\n      this.setState({ failed: true });\n    }\n  }\n\n  render() {\n    const src = this.state.failed ? this.props.src : this.getThumbnailSrc(this.props);\n\n    const dimensions = {\n      width: null,\n      height: null,\n    };\n\n    const style = {\n      maxWidth: this.props.width,\n      maxHeight: this.props.height,\n    };\n\n    if (this.props.format === 'mp4') {\n      return (\n        <div>\n          <video width=\"300\" controls>\n            <source src={this.props.src} type=\"video/mp4\" />\n          </video>\n        </div>\n      );\n    }\n\n    return (\n      <img alt=\"\" {...this.props} src={src} {...dimensions} style={style} onError={this.handleError} />\n    );\n  }\n}\n\nThumbnail.defaultProps = {\n  format: 'image',\n  height: MAX_THUMBNAIL_DIMENSION,\n  origin: 'https://thumbnails.zooniverse.org',\n  src: '',\n  width: MAX_THUMBNAIL_DIMENSION\n};\n\nThumbnail.propTypes = {\n  format: PropTypes.string,\n  height: PropTypes.number,\n  origin: PropTypes.string,\n  src: PropTypes.string,\n  width: PropTypes.number\n};\n"]}