{"version":3,"sources":["../../src/components/image-selector.jsx"],"names":["ImageSelector","props","state","working","cropImage","bind","reduceImage","handleChange","srcImg","srcFile","canvas","document","createElement","width","naturalWidth","height","naturalHeight","isNaN","ratio","naturalRatio","ctx","getContext","drawImage","croppedImg","Image","onload","src","toDataURL","img","_scale","dataURL","type","size","split","length","baseExpansion","maxSize","minArea","reductionPerPass","setState","title","name","window","navigator","onChange","resourceType","e","alert","target","files","file","reader","FileReader","event","result","readAsDataURL","uploaderClass","resourceSrc","label","position","allowDelete","deleting","onDelete","loading","React","Component","propTypes","PropTypes","bool","number","string","oneOfType","node","func","isRequired","defaultProps","Infinity","NaN"],"mappings":"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","file":"image-selector.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n// TODO: [window is undefined](https://github.com/zeit/next.js/wiki/FAQ) issue with data-uri-to-blob, commenting out, needs proper fix\n// import toBlob from 'data-uri-to-blob';\nimport FileButton from './file-button';\nimport Thumbnail from './thumbnail';\n\nclass ImageSelector extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      working: false\n    };\n\n    this.cropImage = this.cropImage.bind(this);\n    this.reduceImage = this.reduceImage.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  cropImage(srcImg, srcFile) {\n    const canvas = document.createElement('canvas');\n    canvas.width = srcImg.naturalWidth;\n    canvas.height = srcImg.naturalHeight;\n\n    if (!isNaN(this.props.ratio)) {\n      const naturalRatio = (srcImg.naturalWidth / srcImg.naturalHeight);\n      if (naturalRatio - this.props.ratio < 0) {\n        canvas.height = (canvas.width / this.props.ratio);\n      } else {\n        canvas.width = (canvas.height * this.props.ratio);\n      }\n    }\n    const ctx = canvas.getContext('2d');\n    ctx.drawImage(srcImg, (srcImg.naturalWidth - canvas.width) / -2, (srcImg.naturalHeight - canvas.height) / -2);\n\n    const croppedImg = new Image();\n    croppedImg.onload = () => {\n      this.reduceImage(croppedImg, srcFile);\n    };\n    croppedImg.src = canvas.toDataURL();\n  }\n\n  reduceImage(img, srcFile, _scale = 1) {\n    const canvas = document.createElement('canvas');\n    canvas.width = (img.naturalWidth * _scale);\n    canvas.height = (img.naturalHeight * _scale);\n\n    const ctx = canvas.getContext('2d');\n    ctx.drawImage(img, 0, 0, img.naturalWidth, img.naturalHeight, 0, 0, canvas.width, canvas.height);\n\n    const dataURL = canvas.toDataURL(srcFile.type);\n\n    try {\n      const size = dataURL.split(';base64,')[1].length * this.props.baseExpansion;\n\n      if (size > this.props.maxSize && canvas.width * canvas.height > this.props.minArea) {\n        // Keep trying until it's small enough.\n        this.reduceImage(img, srcFile, _scale - this.props.reductionPerPass);\n      } else {\n        this.setState({ working: false });\n\n        img.title = srcFile.name;\n        if (window && window.navigator) {\n          // this.props.onChange(this.props.resourceType, toBlob(dataURL), img);\n        } else {\n          this.props.onChange(this.props.resourceType, img);\n        }\n      }\n    } catch (e) {\n      this.setState({ working: false });\n\n      alert('Error reducing image. Try a smaller one.');\n    }\n  }\n\n  handleChange(e) {\n    // TODO: why is the proxy event in an array?\n    if (e[0].target.files.length !== 0) {\n      const [file] = e[0].target.files;\n      this.setState({ working: true });\n\n      const reader = new FileReader();\n      reader.onload = (event) => {\n        const img = new Image();\n        img.onload = () => {\n          this.cropImage(img, file);\n        };\n        img.src = event.target.result;\n      };\n      reader.readAsDataURL(file);\n    }\n  }\n\n  render() {\n    // TODO: Add prop to switch from using the FileButton to a button\n    // that triggers modal with a media selection view of already uploaded attached images.\n    // This would be for reuse with projects when they get added to pfe-lab\n    const uploaderClass = (this.props.resourceSrc) ? 'image-selector__uploader--without-border' : 'image-selector__uploader';\n\n    return (\n      <div className=\"image-selector\">\n        {this.props.label &&\n          <p className=\"image-selector__label\">{this.props.label}</p>}\n        <div className={uploaderClass}>\n          <FileButton accept=\"image/*\" onSelect={this.handleChange} rootStyle={{ position: \"absolute\" }} disabled={this.state.working} />\n          {!this.props.resourceSrc && !this.state.working &&\n            <p className=\"image-selector__placeholder\">Drop an image here</p>}\n          {this.props.resourceSrc &&\n            <div className=\"image-selector__thumbnail\">\n              <Thumbnail src={this.props.resourceSrc} width={160} />\n              {this.props.allowDelete &&\n                <button\n                  type=\"button\"\n                  aria-label=\"Delete\"\n                  className=\"image-selector__delete-button\"\n                  disabled={this.props.deleting}\n                  onClick={this.props.onDelete.bind(null, this.props.resourceType)}\n                >\n                  &times;\n                </button>}\n            </div>}\n          {this.state.working &&\n            <p className=\"image-selector__loader\">\n              {this.props.loading}\n            </p>}\n        </div>\n      </div>\n    );\n  }\n}\n\nImageSelector.propTypes = {\n  allowDelete: PropTypes.bool,\n  baseExpansion: PropTypes.number,\n  deleting: PropTypes.bool,\n  label: PropTypes.string,\n  loading: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.node\n  ]),\n  minArea: PropTypes.number,\n  maxSize: PropTypes.number,\n  onChange: PropTypes.func.isRequired,\n  onDelete: PropTypes.func,\n  ratio: PropTypes.number,\n  reductionPerPass: PropTypes.number,\n  resourceSrc: PropTypes.string.isRequired,\n  resourceType: PropTypes.string\n};\n\nImageSelector.defaultProps = {\n  allowDelete: false,\n  baseExpansion: 3 / 4,\n  deleting: false,\n  loading: 'Loading...',\n  maxSize: Infinity,\n  minArea: 300,\n  onChange: () => {},\n  onDelete: () => {},\n  reductionPerPass: 0.05,\n  resourceSrc: '',\n  ratio: NaN\n};\n\nexport default ImageSelector;\n"]}