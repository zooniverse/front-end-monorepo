"use strict";(self.webpackChunk_zooniverse_subject_viewers=self.webpackChunk_zooniverse_subject_viewers||[]).push([[461],{"./src/VolumetricViewer/VolumetricView/VolumetricView.stories.jsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Volume16x16x16:()=>Volume16x16x16,Volume32x32x32:()=>Volume32x32x32,Volume4x4x4:()=>Volume4x4x4,Volume64x64x64:()=>Volume64x64x64,Volume8x8x8:()=>Volume8x8x8,__namedExportsOrder:()=>__namedExportsOrder,default:()=>VolumetricView_stories});var prop_types=__webpack_require__("../../node_modules/prop-types/index.js"),react=__webpack_require__("../../node_modules/react/index.js"),ComponentFull=__webpack_require__("./src/VolumetricViewer/components/ComponentFull.jsx"),ModelViewer=__webpack_require__("./src/VolumetricViewer/models/ModelViewer.js"),useVolumetricSubject=__webpack_require__("./src/hooks/useVolumetricSubject.js"),jsx_runtime=__webpack_require__("../../node_modules/react/jsx-runtime.js");function _slicedToArray(r,e){return function _arrayWithHoles(r){if(Array.isArray(r))return r}(r)||function _iterableToArrayLimit(r,l){var t=null==r?null:"undefined"!=typeof Symbol&&r[Symbol.iterator]||r["@@iterator"];if(null!=t){var e,n,i,u,a=[],f=!0,o=!1;try{if(i=(t=t.call(r)).next,0===l){if(Object(t)!==t)return;f=!1}else for(;!(f=(e=i.call(t)).done)&&(a.push(e.value),a.length!==l);f=!0);}catch(r){o=!0,n=r}finally{try{if(!f&&null!=t.return&&(u=t.return(),Object(u)!==u))return}finally{if(o)throw n}}return a}}(r,e)||function _unsupportedIterableToArray(r,a){if(r){if("string"==typeof r)return _arrayLikeToArray(r,a);var t={}.toString.call(r).slice(8,-1);return"Object"===t&&r.constructor&&(t=r.constructor.name),"Map"===t||"Set"===t?Array.from(r):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?_arrayLikeToArray(r,a):void 0}}(r,e)||function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(r,a){(null==a||a>r.length)&&(a=r.length);for(var e=0,n=Array(a);e<a;e++)n[e]=r[e];return n}function VolumetricView(_ref){var subject=_ref.subject,_useVolumetricSubject=(0,useVolumetricSubject.q)({subject}),data=_useVolumetricSubject.data,loading=_useVolumetricSubject.loading,error=_useVolumetricSubject.error,_useState2=_slicedToArray((0,react.useState)(null),2),modelState=_useState2[0],setModelState=_useState2[1];return(0,react.useEffect)((function(){if(data){var state={viewer:(0,ModelViewer.g)()};state.viewer.initialize({data}),setModelState(state)}}),[data]),loading?(0,jsx_runtime.jsx)("p",{children:"Loading..."}):error||null===data||null===modelState?(0,jsx_runtime.jsx)("p",{children:"Error"}):(0,jsx_runtime.jsx)(ComponentFull.v,{"data-testid":"subject-viewer-volumetric",data,models:modelState})}VolumetricView.propTypes={subject:prop_types.object},VolumetricView.__docgenInfo={description:"",methods:[],displayName:"VolumetricView",props:{subject:{description:"",type:{name:"custom",raw:"object"},required:!1}}};var subjectMock=__webpack_require__("./src/VolumetricViewer/data/subjectMock.js");const VolumetricView_stories={title:"Components / VolumetricViewer / View",component:VolumetricView};var Volume4x4x4=function Volume4x4x4(){return(0,jsx_runtime.jsx)(VolumetricView,{subject:subjectMock.RH})};Volume4x4x4.displayName="Volume4x4x4";var Volume8x8x8=function Volume8x8x8(){return(0,jsx_runtime.jsx)(VolumetricView,{subject:subjectMock.DG})};Volume8x8x8.displayName="Volume8x8x8";var Volume16x16x16=function Volume16x16x16(){return(0,jsx_runtime.jsx)(VolumetricView,{subject:subjectMock.sq})};Volume16x16x16.displayName="Volume16x16x16";var Volume32x32x32=function Volume32x32x32(){return(0,jsx_runtime.jsx)(VolumetricView,{subject:subjectMock._U})};Volume32x32x32.displayName="Volume32x32x32";var Volume64x64x64=function Volume64x64x64(){return(0,jsx_runtime.jsx)(VolumetricView,{subject:subjectMock.Dq})};Volume64x64x64.displayName="Volume64x64x64",Volume4x4x4.parameters={...Volume4x4x4.parameters,docs:{...Volume4x4x4.parameters?.docs,source:{originalSource:"() => {\n  return <Component subject={VolumetricSubjectMock4} />;\n}",...Volume4x4x4.parameters?.docs?.source}}},Volume8x8x8.parameters={...Volume8x8x8.parameters,docs:{...Volume8x8x8.parameters?.docs,source:{originalSource:"() => {\n  return <Component subject={VolumetricSubjectMock8} />;\n}",...Volume8x8x8.parameters?.docs?.source}}},Volume16x16x16.parameters={...Volume16x16x16.parameters,docs:{...Volume16x16x16.parameters?.docs,source:{originalSource:"() => {\n  return <Component subject={VolumetricSubjectMock16} />;\n}",...Volume16x16x16.parameters?.docs?.source}}},Volume32x32x32.parameters={...Volume32x32x32.parameters,docs:{...Volume32x32x32.parameters?.docs,source:{originalSource:"() => {\n  return <Component subject={VolumetricSubjectMock32} />;\n}",...Volume32x32x32.parameters?.docs?.source}}},Volume64x64x64.parameters={...Volume64x64x64.parameters,docs:{...Volume64x64x64.parameters?.docs,source:{originalSource:"() => {\n  return <Component subject={VolumetricSubjectMock64} />;\n}",...Volume64x64x64.parameters?.docs?.source}}};const __namedExportsOrder=["Volume4x4x4","Volume8x8x8","Volume16x16x16","Volume32x32x32","Volume64x64x64"]}}]);