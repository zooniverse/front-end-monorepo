"use strict";(self.webpackChunk_zooniverse_classifier=self.webpackChunk_zooniverse_classifier||[]).push([[7533],{"./src/plugins/tasks/dropdown-simple/components/SimpleDropdownTask.stories.jsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{LongOptions:()=>LongOptions,MediumOptions:()=>MediumOptions,ShortOptions:()=>ShortOptions,__namedExportsOrder:()=>__namedExportsOrder,default:()=>SimpleDropdownTask_stories});var async_states=__webpack_require__("../lib-async-states/src/async-states.js"),async_states_default=__webpack_require__.n(async_states),components=__webpack_require__("./src/stories/components/index.js"),SimpleDropdownTask=__webpack_require__("./src/plugins/tasks/dropdown-simple/components/SimpleDropdownTask.jsx"),SimpleDropdownTaskMockShort={options:["red","orange","yellow","green","blue","purple"],labels:{}};SimpleDropdownTaskMockShort.options.forEach((function(opt,i){SimpleDropdownTaskMockShort.labels["selects.0.options.*.".concat(i,".label")]=opt}));var SimpleDropdownTaskMockMedium={options:Array.from(Array(40),(function(_,i){return(i+1).toString()})),labels:{}};SimpleDropdownTaskMockMedium.options.forEach((function(opt,i){SimpleDropdownTaskMockMedium.labels["selects.0.options.*.".concat(i,".label")]=opt}));var SimpleDropdownTaskMockLong={options:Array.from(Array(200),(function(_,i){return(i+1).toString()})),labels:{}};SimpleDropdownTaskMockLong.options.forEach((function(opt,i){SimpleDropdownTaskMockLong.labels["selects.0.options.*.".concat(i,".label")]=opt}));var jsx_runtime=__webpack_require__("../../node_modules/react/jsx-runtime.js");function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _defineProperty(e,r,t){return(r=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(r))in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function _toConsumableArray(r){return function _arrayWithoutHoles(r){if(Array.isArray(r))return _arrayLikeToArray(r)}(r)||function _iterableToArray(r){if("undefined"!=typeof Symbol&&null!=r[Symbol.iterator]||null!=r["@@iterator"])return Array.from(r)}(r)||function _unsupportedIterableToArray(r,a){if(r){if("string"==typeof r)return _arrayLikeToArray(r,a);var t={}.toString.call(r).slice(8,-1);return"Object"===t&&r.constructor&&(t=r.constructor.name),"Map"===t||"Set"===t?Array.from(r):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?_arrayLikeToArray(r,a):void 0}}(r)||function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(r,a){(null==a||a>r.length)&&(a=r.length);for(var e=0,n=Array(a);e<a;e++)n[e]=r[e];return n}const SimpleDropdownTask_stories={title:"Tasks / Simple Dropdown",component:SimpleDropdownTask.A,args:{isThereTaskHelp:!0,required:!1,subjectReadyState:async_states_default().success},argTypes:{subjectReadyState:{control:{type:"select",options:async_states_default()}}}};function ShortOptions(_ref){var isThereTaskHelp=_ref.isThereTaskHelp,required=_ref.required,subjectReadyState=_ref.subjectReadyState,tasks={init:{allowCreate:!1,options:_toConsumableArray(SimpleDropdownTaskMockShort.options),required,strings:_objectSpread({help:"Choose an option from the list of options.",instruction:"Select your favourite colour."},SimpleDropdownTaskMockShort.labels),taskKey:"init",type:"dropdown-simple"}};return(0,jsx_runtime.jsx)(components.W,{isThereTaskHelp,subjectReadyState,tasks})}function MediumOptions(_ref2){var isThereTaskHelp=_ref2.isThereTaskHelp,required=_ref2.required,subjectReadyState=_ref2.subjectReadyState,tasks={init:{allowCreate:!1,options:_toConsumableArray(SimpleDropdownTaskMockMedium.options),required,strings:_objectSpread({help:"Choose an option from the list of options.",instruction:"Select your favourite colour."},SimpleDropdownTaskMockMedium.labels),taskKey:"init",type:"dropdown-simple"}};return(0,jsx_runtime.jsx)(components.W,{isThereTaskHelp,subjectReadyState,tasks})}function LongOptions(_ref3){var isThereTaskHelp=_ref3.isThereTaskHelp,required=_ref3.required,subjectReadyState=_ref3.subjectReadyState,tasks={init:{allowCreate:!1,options:_toConsumableArray(SimpleDropdownTaskMockLong.options),required,strings:_objectSpread({help:"Choose an option from the list of options.",instruction:"Select your favourite colour."},SimpleDropdownTaskMockLong.labels),taskKey:"init",type:"dropdown-simple"}};return(0,jsx_runtime.jsx)(components.W,{isThereTaskHelp,subjectReadyState,tasks})}ShortOptions.displayName="ShortOptions",MediumOptions.displayName="MediumOptions",LongOptions.displayName="LongOptions",ShortOptions.parameters={...ShortOptions.parameters,docs:{...ShortOptions.parameters?.docs,source:{originalSource:"function ShortOptions({\n  isThereTaskHelp,\n  required,\n  subjectReadyState\n}) {\n  const simpleDropdownTask = {\n    allowCreate: false,\n    options: [...SimpleDropdownTaskMockShort.options],\n    required,\n    strings: {\n      help: 'Choose an option from the list of options.',\n      instruction: 'Select your favourite colour.',\n      ...SimpleDropdownTaskMockShort.labels\n    },\n    taskKey: 'init',\n    type: 'dropdown-simple'\n  };\n  const tasks = {\n    init: simpleDropdownTask\n  };\n  return <MockTask isThereTaskHelp={isThereTaskHelp} subjectReadyState={subjectReadyState} tasks={tasks} />;\n}",...ShortOptions.parameters?.docs?.source}}},MediumOptions.parameters={...MediumOptions.parameters,docs:{...MediumOptions.parameters?.docs,source:{originalSource:"function MediumOptions({\n  isThereTaskHelp,\n  required,\n  subjectReadyState\n}) {\n  const simpleDropdownTask = {\n    allowCreate: false,\n    options: [...SimpleDropdownTaskMockMedium.options],\n    required,\n    strings: {\n      help: 'Choose an option from the list of options.',\n      instruction: 'Select your favourite colour.',\n      ...SimpleDropdownTaskMockMedium.labels\n    },\n    taskKey: 'init',\n    type: 'dropdown-simple'\n  };\n  const tasks = {\n    init: simpleDropdownTask\n  };\n  return <MockTask isThereTaskHelp={isThereTaskHelp} subjectReadyState={subjectReadyState} tasks={tasks} />;\n}",...MediumOptions.parameters?.docs?.source}}},LongOptions.parameters={...LongOptions.parameters,docs:{...LongOptions.parameters?.docs,source:{originalSource:"function LongOptions({\n  isThereTaskHelp,\n  required,\n  subjectReadyState\n}) {\n  const simpleDropdownTask = {\n    allowCreate: false,\n    options: [...SimpleDropdownTaskMockLong.options],\n    required,\n    strings: {\n      help: 'Choose an option from the list of options.',\n      instruction: 'Select your favourite colour.',\n      ...SimpleDropdownTaskMockLong.labels\n    },\n    taskKey: 'init',\n    type: 'dropdown-simple'\n  };\n  const tasks = {\n    init: simpleDropdownTask\n  };\n  return <MockTask isThereTaskHelp={isThereTaskHelp} subjectReadyState={subjectReadyState} tasks={tasks} />;\n}",...LongOptions.parameters?.docs?.source}}};const __namedExportsOrder=["ShortOptions","MediumOptions","LongOptions"]}}]);