"use strict";(self.webpackChunk_zooniverse_classifier=self.webpackChunk_zooniverse_classifier||[]).push([[5789],{"./src/plugins/drawingTools/experimental/components/TranscriptionLine/TranscriptionLine.stories.jsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Active:()=>Active,Complete:()=>Complete,Subtask:()=>Subtask,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _zooniverse_grommet_theme__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../lib-grommet-theme/src/index.js"),_zooniverse_grommet_theme__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_zooniverse_grommet_theme__WEBPACK_IMPORTED_MODULE_0__),_test_mockStore__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./test/mockStore/index.js"),_stories_helpers__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/plugins/drawingTools/stories/helpers.jsx"),_test_factories__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./test/factories/index.js"),___WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/plugins/drawingTools/experimental/components/TranscriptionLine/index.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("../../node_modules/react/jsx-runtime.js");function _slicedToArray(r,e){return function _arrayWithHoles(r){if(Array.isArray(r))return r}(r)||function _iterableToArrayLimit(r,l){var t=null==r?null:"undefined"!=typeof Symbol&&r[Symbol.iterator]||r["@@iterator"];if(null!=t){var e,n,i,u,a=[],f=!0,o=!1;try{if(i=(t=t.call(r)).next,0===l){if(Object(t)!==t)return;f=!1}else for(;!(f=(e=i.call(t)).done)&&(a.push(e.value),a.length!==l);f=!0);}catch(r){o=!0,n=r}finally{try{if(!f&&null!=t.return&&(u=t.return(),Object(u)!==u))return}finally{if(o)throw n}}return a}}(r,e)||function _unsupportedIterableToArray(r,a){if(r){if("string"==typeof r)return _arrayLikeToArray(r,a);var t={}.toString.call(r).slice(8,-1);return"Object"===t&&r.constructor&&(t=r.constructor.name),"Map"===t||"Set"===t?Array.from(r):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?_arrayLikeToArray(r,a):void 0}}(r,e)||function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(r,a){(null==a||a>r.length)&&(a=r.length);for(var e=0,n=Array(a);e<a;e++)n[e]=r[e];return n}var drawingTaskSnapshot=_test_factories__WEBPACK_IMPORTED_MODULE_3__.wC.build({instruction:"Draw a line under the text",taskKey:"T1",tools:[{color:_zooniverse_grommet_theme__WEBPACK_IMPORTED_MODULE_0___default().global.colors["drawing-orange"],type:"transcriptionLine",details:[{instruction:"transcribe the text.",taskKey:"T0.0",type:"text"}]}],type:"drawing"}),mockBounds={x:122.5,y:132.5,width:0,height:0,top:0,right:0,bottom:0,left:0};var stores=function setupStores(){try{var workflow=_test_factories__WEBPACK_IMPORTED_MODULE_3__.s4.build({strings:{display_name:"Transcription line workflow","tasks.T1.instruction":"Draw a line under the text","tasks.T1.tools.0.details.0.instruction":"transcribe the text."},tasks:{T1:drawingTaskSnapshot}}),mockStores=(0,_test_mockStore__WEBPACK_IMPORTED_MODULE_1__.A)({subject:_stories_helpers__WEBPACK_IMPORTED_MODULE_2__.bc,workflow}),drawingTask=_slicedToArray(mockStores.workflowSteps.active.tasks,1)[0];drawingTask.setActiveTool(0);drawingTask.activeTool.createMark({x1:100,y1:100,x2:200,y2:105});return mockStores}catch(error){return console.error(error),null}}();const __WEBPACK_DEFAULT_EXPORT__={title:"Drawing tools / Transcription Line",component:___WEBPACK_IMPORTED_MODULE_4__.A};function Complete(args){return(0,_stories_helpers__WEBPACK_IMPORTED_MODULE_2__.mF)(args,mockBounds,stores),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_stories_helpers__WEBPACK_IMPORTED_MODULE_2__.WH,{stores})}function Active(args){return(0,_stories_helpers__WEBPACK_IMPORTED_MODULE_2__.mF)(args,mockBounds,stores),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_stories_helpers__WEBPACK_IMPORTED_MODULE_2__.WH,{stores})}function Subtask(args){return(0,_stories_helpers__WEBPACK_IMPORTED_MODULE_2__.mF)(args,mockBounds,stores),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_stories_helpers__WEBPACK_IMPORTED_MODULE_2__.WH,{stores})}Complete.displayName="Complete",Complete.args={activeMark:!1,finished:!1,subtask:!1},Active.displayName="Active",Active.args={activeMark:!0,finished:!1,subtask:!1},Subtask.displayName="Subtask",Subtask.args={activeMark:!0,finished:!0,subtask:!0},Complete.parameters={...Complete.parameters,docs:{...Complete.parameters?.docs,source:{originalSource:"function Complete(args) {\n  updateStores(args, mockBounds, stores);\n  return <DrawingStory stores={stores} />;\n}",...Complete.parameters?.docs?.source}}},Active.parameters={...Active.parameters,docs:{...Active.parameters?.docs,source:{originalSource:"function Active(args) {\n  updateStores(args, mockBounds, stores);\n  return <DrawingStory stores={stores} />;\n}",...Active.parameters?.docs?.source}}},Subtask.parameters={...Subtask.parameters,docs:{...Subtask.parameters?.docs,source:{originalSource:"function Subtask(args) {\n  updateStores(args, mockBounds, stores);\n  return <DrawingStory stores={stores} />;\n}",...Subtask.parameters?.docs?.source}}};const __namedExportsOrder=["Complete","Active","Subtask"]}}]);