"use strict";(self.webpackChunk_zooniverse_classifier=self.webpackChunk_zooniverse_classifier||[]).push([[9470],{"./src/components/Classifier/components/SubjectViewer/components/SingleImageViewer/SingleImageViewer.stories.jsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,Error:()=>Error,Loading:()=>Loading,PanAndZoom:()=>PanAndZoom,__namedExportsOrder:()=>__namedExportsOrder,default:()=>SingleImageViewer_stories});var async_states=__webpack_require__("../lib-async-states/src/async-states.js"),async_states_default=__webpack_require__.n(async_states),Box=__webpack_require__("../../node_modules/grommet/es6/components/Box/Box.js"),mobxreact_esm=__webpack_require__("../../node_modules/mobx-react/dist/mobxreact.esm.js"),ImageToolbar=__webpack_require__("./src/components/Classifier/components/ImageToolbar/index.js"),factories=__webpack_require__("./test/factories/index.js"),subject=factories.vk.build({locations:[{"image/jpeg":"https://panoptes-uploads.zooniverse.org/production/subject_location/11f98201-1c3f-44d5-965b-e00373daeb18.jpeg"}]}),mockStore=__webpack_require__("./test/mockStore/index.js"),SingleImageViewerContainer=__webpack_require__("./src/components/Classifier/components/SubjectViewer/components/SingleImageViewer/SingleImageViewerContainer.jsx"),jsx_runtime=__webpack_require__("../../node_modules/react/jsx-runtime.js"),workflow=factories.s4.build({configuration:{invert_subject:!0}}),store=(0,mockStore.A)({subject,workflow}),ViewerContext=function ViewerContext(_ref){var store=_ref.store,children=_ref.children;return(0,jsx_runtime.jsx)(mobxreact_esm.Kq,{classifierStore:store,children})};ViewerContext.displayName="ViewerContext";const SingleImageViewer_stories={title:"Subject Viewers / SingleImageViewer",component:SingleImageViewerContainer.A};function Default(){return(0,jsx_runtime.jsx)(ViewerContext,{store,children:(0,jsx_runtime.jsx)(Box.a,{width:"large",children:(0,jsx_runtime.jsx)(SingleImageViewerContainer.A,{loadingState:async_states_default().success,title:{id:"subject-title",text:"Subject ".concat(subject.id)}})})})}function PanAndZoom(){return(0,jsx_runtime.jsx)(ViewerContext,{store,children:(0,jsx_runtime.jsxs)(Box.a,{direction:"row",width:"large",children:[(0,jsx_runtime.jsx)(SingleImageViewerContainer.A,{loadingState:async_states_default().success}),(0,jsx_runtime.jsx)(ImageToolbar.A,{width:"4rem"})]})})}function Error(){return(0,jsx_runtime.jsx)(ViewerContext,{store,children:(0,jsx_runtime.jsx)(Box.a,{width:"large",children:(0,jsx_runtime.jsx)(SingleImageViewerContainer.A,{loadingState:async_states_default().error})})})}function Loading(){return(0,jsx_runtime.jsx)(ViewerContext,{store,children:(0,jsx_runtime.jsx)(Box.a,{width:"large",children:(0,jsx_runtime.jsx)(SingleImageViewerContainer.A,{loadingState:async_states_default().loading})})})}Default.displayName="Default",PanAndZoom.displayName="PanAndZoom",Error.displayName="Error",Loading.displayName="Loading",Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"function Default() {\n  return <ViewerContext store={store}>\n      <Box width='large'>\n        <SingleImageViewerContainer loadingState={asyncStates.success} title={{\n        id: 'subject-title',\n        text: `Subject ${subject.id}`\n      }} />\n      </Box>\n    </ViewerContext>;\n}",...Default.parameters?.docs?.source}}},PanAndZoom.parameters={...PanAndZoom.parameters,docs:{...PanAndZoom.parameters?.docs,source:{originalSource:"function PanAndZoom() {\n  return <ViewerContext store={store}>\n      <Box direction='row' width='large'>\n      <SingleImageViewerContainer loadingState={asyncStates.success} />\n        <ImageToolbar width='4rem' />\n      </Box>\n    </ViewerContext>;\n}",...PanAndZoom.parameters?.docs?.source}}},Error.parameters={...Error.parameters,docs:{...Error.parameters?.docs,source:{originalSource:"function Error() {\n  return <ViewerContext store={store}>\n      <Box width='large'>\n        <SingleImageViewerContainer loadingState={asyncStates.error} />\n      </Box>\n    </ViewerContext>;\n}",...Error.parameters?.docs?.source}}},Loading.parameters={...Loading.parameters,docs:{...Loading.parameters?.docs,source:{originalSource:"function Loading() {\n  return <ViewerContext store={store}>\n      <Box width='large'>\n        <SingleImageViewerContainer loadingState={asyncStates.loading} />\n      </Box>\n    </ViewerContext>;\n}",...Loading.parameters?.docs?.source}}};const __namedExportsOrder=["Default","PanAndZoom","Error","Loading"]}}]);