"use strict";(self.webpackChunk_zooniverse_classifier=self.webpackChunk_zooniverse_classifier||[]).push([[9983],{"./src/plugins/tasks/text/components/TextTask/TextTask.stories.jsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__,withSuggestions:()=>withSuggestions});var _zooniverse_async_states__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../lib-async-states/src/async-states.js"),_zooniverse_async_states__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_zooniverse_async_states__WEBPACK_IMPORTED_MODULE_0__),_stories_components__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/stories/components/index.js"),_TextTask__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/plugins/tasks/text/components/TextTask/TextTask.jsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("../../node_modules/react/jsx-runtime.js");const __WEBPACK_DEFAULT_EXPORT__={title:"Tasks / Text",component:_TextTask__WEBPACK_IMPORTED_MODULE_2__.A,args:{isThereTaskHelp:!0,required:!1,subjectReadyState:_zooniverse_async_states__WEBPACK_IMPORTED_MODULE_0___default().success},argTypes:{subjectReadyState:{control:{type:"select",options:_zooniverse_async_states__WEBPACK_IMPORTED_MODULE_0___default()}}}};function Default(_ref){var isThereTaskHelp=_ref.isThereTaskHelp,required=_ref.required,subjectReadyState=_ref.subjectReadyState,tasks={T0:{required,strings:{help:isThereTaskHelp?"Type something into the text box.":"",instruction:"Type something here"},taskKey:"T0",text_tags:["insertion","deletion","&"],type:"text"}};return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_stories_components__WEBPACK_IMPORTED_MODULE_1__.W,{isThereTaskHelp,subjectReadyState,tasks})}function withSuggestions(_ref2){var isThereTaskHelp=_ref2.isThereTaskHelp,required=_ref2.required,subjectReadyState=_ref2.subjectReadyState,tasks={T0:{required,strings:{help:isThereTaskHelp?"Pick one of the suggestions.":"",instruction:"Type something here"},taskKey:"T0",text_tags:["insertion","deletion","&"],type:"text"}},previousAnnotationValues=new Map([["T0",["Lorem ipsum dolor sit amet, consectetur adipiscing elit.","Duis risus turpis, porttitor sit amet leo at, placerat malesuada augue.","Nunc enim risus, interdum id efficitur sed, luctus in orci."]]]);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_stories_components__WEBPACK_IMPORTED_MODULE_1__.W,{isThereTaskHelp,subjectReadyState,previousAnnotationValues,tasks})}Default.displayName="Default",withSuggestions.displayName="withSuggestions",Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"function Default({\n  isThereTaskHelp,\n  required,\n  subjectReadyState\n}) {\n  const tasks = {\n    T0: {\n      required,\n      strings: {\n        help: isThereTaskHelp ? 'Type something into the text box.' : '',\n        instruction: 'Type something here'\n      },\n      taskKey: 'T0',\n      text_tags: ['insertion', 'deletion', '&'],\n      type: 'text'\n    }\n  };\n  return <MockTask isThereTaskHelp={isThereTaskHelp} subjectReadyState={subjectReadyState} tasks={tasks} />;\n}",...Default.parameters?.docs?.source}}},withSuggestions.parameters={...withSuggestions.parameters,docs:{...withSuggestions.parameters?.docs,source:{originalSource:"function withSuggestions({\n  isThereTaskHelp,\n  required,\n  subjectReadyState\n}) {\n  const tasks = {\n    T0: {\n      required,\n      strings: {\n        help: isThereTaskHelp ? 'Pick one of the suggestions.' : '',\n        instruction: 'Type something here'\n      },\n      taskKey: 'T0',\n      text_tags: ['insertion', 'deletion', '&'],\n      type: 'text'\n    }\n  };\n  const previousTextAnnotations = ['Lorem ipsum dolor sit amet, consectetur adipiscing elit.', 'Duis risus turpis, porttitor sit amet leo at, placerat malesuada augue.', 'Nunc enim risus, interdum id efficitur sed, luctus in orci.'];\n  const previousAnnotationValues = new Map([['T0', previousTextAnnotations]]);\n  return <MockTask isThereTaskHelp={isThereTaskHelp} subjectReadyState={subjectReadyState} previousAnnotationValues={previousAnnotationValues} tasks={tasks} />;\n}",...withSuggestions.parameters?.docs?.source}}};const __namedExportsOrder=["Default","withSuggestions"]}}]);