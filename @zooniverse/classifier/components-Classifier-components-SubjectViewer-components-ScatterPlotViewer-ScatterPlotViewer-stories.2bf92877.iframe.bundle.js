"use strict";(self.webpackChunk_zooniverse_classifier=self.webpackChunk_zooniverse_classifier||[]).push([[8142],{"./src/components/Classifier/components/SubjectViewer/components/JSONDataViewer/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>_JSONDataViewer__WEBPACK_IMPORTED_MODULE_0__.A});var _JSONDataViewer__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/components/Classifier/components/SubjectViewer/components/JSONDataViewer/JSONDataViewer.jsx")},"./src/components/Classifier/components/SubjectViewer/components/ScatterPlotViewer/ScatterPlotViewer.stories.jsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,ErrorBars:()=>ErrorBars,KeplerLightCurve:()=>KeplerLightCurve,MultipleSeries:()=>MultipleSeries,NarrowView:()=>NarrowView,PanAndZoom:()=>PanAndZoom,SelectedXRanges:()=>SelectedXRanges,SelectionFeedback:()=>SelectionFeedback,XRangeSelection:()=>XRangeSelection,__namedExportsOrder:()=>__namedExportsOrder,default:()=>ScatterPlotViewer_stories});var src=__webpack_require__("../lib-grommet-theme/src/index.js"),src_default=__webpack_require__.n(src),Box=__webpack_require__("../../node_modules/grommet/es6/components/Box/Box.js"),polished_esm=__webpack_require__("../../node_modules/polished/dist/polished.esm.js"),ScatterPlotViewer=__webpack_require__("./src/components/Classifier/components/SubjectViewer/components/ScatterPlotViewer/ScatterPlotViewer.jsx"),JSONDataViewer=__webpack_require__("./src/components/Classifier/components/SubjectViewer/components/JSONDataViewer/index.js"),mobxreact_esm=__webpack_require__("../../node_modules/mobx-react/dist/mobxreact.esm.js"),mockStore=__webpack_require__("./test/mockStore/index.js"),ImageToolbar=__webpack_require__("./src/components/Classifier/components/ImageToolbar/index.js");const normal=function sourceRandomNormal(source){function randomNormal(mu,sigma){var x,r;return mu=null==mu?0:+mu,sigma=null==sigma?1:+sigma,function(){var y;if(null!=x)y=x,x=null;else do{x=2*source()-1,y=2*source()-1,r=x*x+y*y}while(!r||r>1);return mu+sigma*y*Math.sqrt(-2*Math.log(r)/r)}}return randomNormal.source=sourceRandomNormal,randomNormal}(Math.random),eps=1/4294967296;function getSeededRandom(seed){return function lcg(seed=Math.random()){let state=0|(0<=seed&&seed<1?seed/eps:Math.abs(seed));return()=>(state=1664525*state+1013904223|0,eps*(state>>>0))}(seed)}var sqrt3=Math.sqrt(3);function genPointsRange(length,_ref,random){var offsetX=_ref[0],offsetY=_ref[1],index=_ref[2];return void 0===random&&(random=normal(0,.2)),function range(length){return new Array(length).fill(1)}(length).map((function(){return[random()+offsetX,random()+offsetY,index]}))}var linear=__webpack_require__("../../node_modules/@visx/scale/esm/scales/linear.js"),zip=__webpack_require__("../../node_modules/lodash/zip.js"),zip_default=__webpack_require__.n(zip),d3=__webpack_require__("../../node_modules/d3/index.js"),kepler=__webpack_require__("./src/components/Classifier/components/SubjectViewer/helpers/mockLightCurves/kepler.json");const variableStar_namespaceObject=JSON.parse('{"p":{"scatterPlot":{"data":[{"seriesData":[{"x":47.87527,"y":-0.1646986301,"y_error":0.025},{"x":47.83156,"y":-0.0676986301,"y_error":0.025},{"x":73.8216,"y":0.3093013699,"y_error":0.026},{"x":73.77808,"y":0.5373013699,"y_error":0.026},{"x":1502.79352,"y":-0.2366986301,"y_error":0.03},{"x":1502.82935,"y":-0.2496986301,"y_error":0.03},{"x":44.79089,"y":-0.3306986301,"y_error":0.024},{"x":44.83522,"y":0.5903013699,"y_error":0.023},{"x":1503.78754,"y":-0.2946986301,"y_error":0.027},{"x":1503.83088,"y":-0.1216986301,"y_error":0.027},{"x":1504.78572,"y":0.6113013699,"y_error":0.025},{"x":1504.99654,"y":-0.0886986301,"y_error":0.029},{"x":1506.78147,"y":0.1493013699,"y_error":0.022},{"x":1506.8256,"y":0.0113013699,"y_error":0.022},{"x":1505.83028,"y":0.1943013699,"y_error":0.024},{"x":1505.785,"y":0.3853013699,"y_error":0.024},{"x":1507.77968,"y":-0.0796986301,"y_error":0.023},{"x":1508.77875,"y":-0.2186986301,"y_error":0.028},{"x":1508.82125,"y":-0.2186986301,"y_error":0.028},{"x":1511.83665,"y":0.4413013699,"y_error":0.03},{"x":1511.87571,"y":0.2573013699,"y_error":0.03},{"x":1512.77694,"y":0.3813013699,"y_error":0.026},{"x":1512.81908,"y":0.2103013699,"y_error":0.026},{"x":1513.77063,"y":0.1453013699,"y_error":0.022},{"x":1513.8128,"y":0.0203013699,"y_error":0.023},{"x":1534.78937,"y":0.0063013699,"y_error":0.035},{"x":1534.7542,"y":0.1223013699,"y_error":0.035},{"x":1522.7566,"y":-0.2176986301,"y_error":0.024},{"x":1522.84504,"y":-0.2476986301,"y_error":0.024},{"x":385.80434,"y":-0.1176986301,"y_error":0.077},{"x":385.85972,"y":-0.2246986301,"y_error":0.077},{"x":69.85587,"y":-0.2296986301,"y_error":0.028},{"x":69.8999,"y":-0.2526986301,"y_error":0.029},{"x":34.85444,"y":-0.2086986301,"y_error":0.027},{"x":34.80572,"y":-0.1386986301,"y_error":0.027},{"x":1514.76926,"y":-0.0466986301,"y_error":0.024},{"x":1515.81047,"y":-0.2356986301,"y_error":0.023},{"x":1516.82807,"y":-0.2306986301,"y_error":0.024},{"x":1516.86343,"y":-0.3226986301,"y_error":0.024},{"x":1517.8068,"y":-0.2576986301,"y_error":0.023},{"x":1518.76794,"y":0.5283013699,"y_error":0.03},{"x":1518.81689,"y":0.5203013699,"y_error":0.03},{"x":1519.76653,"y":0.3823013699,"y_error":0.034},{"x":1519.81156,"y":0.1843013699,"y_error":0.035},{"x":1523.75481,"y":-0.2456986301,"y_error":0.028},{"x":1523.79467,"y":-0.2606986301,"y_error":0.028},{"x":1531.757,"y":-0.2826986301,"y_error":0.027},{"x":1531.78435,"y":-0.3396986301,"y_error":0.029},{"x":1533.81687,"y":0.1393013699,"y_error":0.063},{"x":315.02111,"y":-0.2386986301,"y_error":0.028},{"x":314.97538,"y":-0.1856986301,"y_error":0.031},{"x":342.97937,"y":-0.2216986301,"y_error":0.033},{"x":342.93551,"y":-0.1396986301,"y_error":0.034},{"x":345.91919,"y":-0.3346986301,"y_error":0.029},{"x":345.96452,"y":0.6353013699,"y_error":0.025},{"x":371.87221,"y":-0.2206986301,"y_error":0.026},{"x":371.82777,"y":-0.1586986301,"y_error":0.027},{"x":37.85194,"y":0.6853013699,"y_error":0.026},{"x":37.80793,"y":-0.2796986301,"y_error":0.028},{"x":7.81515,"y":-0.2636986301,"y_error":0.14},{"x":7.85837,"y":-0.2146986301,"y_error":0.139},{"x":16.92031,"y":0.4573013699,"y_error":0.038},{"x":16.96338,"y":0.2433013699,"y_error":0.038},{"x":13.86545,"y":-0.2216986301,"y_error":0.027},{"x":13.82154,"y":-0.1066986301,"y_error":0.027},{"x":19.92215,"y":-0.1976986301,"y_error":0.025},{"x":19.96508,"y":-0.2266986301,"y_error":0.025},{"x":30.79588,"y":-0.3516986301,"y_error":0.026},{"x":30.84908,"y":0.5493013699,"y_error":0.024},{"x":0.00206,"y":-0.2676986301,"y_error":0.08},{"x":0,"y":-0.2596986301,"y_error":0.087},{"x":10.86543,"y":0.4303013699,"y_error":0.213},{"x":10.82207,"y":0.6933013699,"y_error":0.213}],"seriesOptions":{"color":"drawing-red","label":"c","period":0.4661477096}},{"seriesData":[{"x":1013.4508660483,"y":-0.2061258229,"y_error":0.025},{"x":896.7822433412,"y":-0.993424393,"y_error":0.025},{"x":1103.5386268057,"y":0.6911580938,"y_error":0.026},{"x":1494.6646663351,"y":-0.9924278664,"y_error":0.026},{"x":725.815216463,"y":0.3478548366,"y_error":0.03},{"x":819.6968065478,"y":-0.595155279,"y_error":0.03},{"x":687.251236751,"y":0.2945850796,"y_error":0.024},{"x":667.284496936,"y":-0.1088930155,"y_error":0.023},{"x":474.9478918132,"y":0.407381035,"y_error":0.027},{"x":427.551325091,"y":0.9777167637,"y_error":0.027},{"x":1213.2931007135,"y":0.581293121,"y_error":0.025},{"x":1265.903299685,"y":-0.9549071437,"y_error":0.029},{"x":767.0429628637,"y":0.9986901321,"y_error":0.022},{"x":595.3904072338,"y":-0.6938162722,"y_error":0.022},{"x":511.2432890612,"y":-0.8903253845,"y_error":0.024},{"x":414.1722476414,"y":0.877097373,"y_error":0.024},{"x":1396.9563402685,"y":0.0427212409,"y_error":0.023},{"x":1275.5387601496,"y":0.5758275645,"y_error":0.028},{"x":1042.3890923246,"y":-0.9999799971,"y_error":0.028},{"x":247.2815742941,"y":0.4061282721,"y_error":0.03},{"x":91.2970420466,"y":0.8723177946,"y_error":0.03},{"x":2.4304788085,"y":-0.8955331618,"y_error":0.026},{"x":591.6889939757,"y":0.9931218049,"y_error":0.026},{"x":888.9909552541,"y":0.8790051613,"y_error":0.022},{"x":543.6219647315,"y":0.5978038192,"y_error":0.023},{"x":1237.8314287846,"y":0.8797615637,"y_error":0.035},{"x":209.6777304663,"y":-0.9952356317,"y_error":0.035},{"x":240.1849588762,"y":-0.0844470263,"y_error":0.024},{"x":764.629121746,"y":-0.5652724238,"y_error":0.024},{"x":1096.3393670805,"y":0.7765745339,"y_error":0.077},{"x":436.6779408962,"y":0.6650549862,"y_error":0.077},{"x":509.2214297232,"y":-0.795125473,"y_error":0.028},{"x":1422.8910066341,"y":-0.9794006382,"y_error":0.029},{"x":434.3927310163,"y":-0.649619278,"y_error":0.027},{"x":93.0505134004,"y":0.2555974839,"y_error":0.027},{"x":232.4523443259,"y":-0.1669521146,"y_error":0.024},{"x":635.911847893,"y":0.6333483265,"y_error":0.023},{"x":606.9726646494,"y":0.882122677,"y_error":0.024},{"x":1330.8965390318,"y":0.4685014643,"y_error":0.024},{"x":1321.7984942126,"y":0.9620368105,"y_error":0.023},{"x":547.9894058514,"y":-0.8332355803,"y_error":0.03},{"x":1280.0373151774,"y":0.0988139015,"y_error":0.03},{"x":54.9847390909,"y":-0.4662313627,"y_error":0.034},{"x":720.1313334204,"y":-0.0886756844,"y_error":0.035},{"x":919.029360425,"y":0.2386000593,"y_error":0.028},{"x":0,"y":0.9373891209,"y_error":0.028},{"x":331.1941510694,"y":0.9989013543,"y_error":0.027},{"x":1154.4516278881,"y":0.15236544,"y_error":0.029},{"x":398.496129295,"y":-0.6645275381,"y_error":0.063},{"x":1153.1092037123,"y":-0.9763708172,"y_error":0.028},{"x":85.1853314263,"y":0.7215466554,"y_error":0.031},{"x":326.0818283145,"y":0.9901275857,"y_error":0.033},{"x":82.2294314224,"y":0.0666334604,"y_error":0.034},{"x":290.2363660186,"y":0.907217271,"y_error":0.029},{"x":1404.9252531885,"y":0.9962605726,"y_error":0.025},{"x":746.6444156998,"y":0.7404231102,"y_error":0.026},{"x":72.2992220497,"y":-0.9380015806,"y_error":0.027},{"x":736.8280570649,"y":-0.9598018798,"y_error":0.026},{"x":1254.671835071,"y":-0.9999997804,"y_error":0.028},{"x":427.7129749775,"y":0.7116904779,"y_error":0.14},{"x":606.8754842013,"y":0.4661595607,"y_error":0.139},{"x":877.215543968,"y":-0.9264330754,"y_error":0.038},{"x":1029.9597995879,"y":-0.7335744593,"y_error":0.038},{"x":745.6042263857,"y":0.7977443578,"y_error":0.027},{"x":741.2717356006,"y":0.7218615299,"y_error":0.027},{"x":202.8445601171,"y":0.6001539793,"y_error":0.025},{"x":1128.7806734387,"y":-0.0481655484,"y_error":0.025},{"x":741.0791264527,"y":-0.3649592648,"y_error":0.026},{"x":1333.5804233725,"y":-0.9402113924,"y_error":0.024},{"x":1058.0155156011,"y":-0.0722334171,"y_error":0.08},{"x":911.9216047268,"y":-0.19237582,"y_error":0.087},{"x":526.2586590598,"y":0.2065937616,"y_error":0.213},{"x":373.5190598283,"y":-0.1806963121,"y_error":0.213}],"seriesOptions":{"color":"drawing-blue","label":"o","period":1.025524961}}],"chartOptions":{"margin":{"bottom":10,"left":10,"right":10,"top":10},"padding":{"bottom":30,"left":30,"right":0,"top":0},"xAxisLabel":"Time (Days)","yAxisLabel":"Brightness"}},"barCharts":{"period":{"data":[{"color":"drawing-red","label":"c","value":0.4661477096},{"color":"drawing-blue","label":"o","value":1.025524961}],"chartOptions":{"xAxisLabel":"Period","yAxisLabel":""}},"amplitude":{"data":[{"color":"drawing-red","label":"c","value":1.045},{"color":"drawing-blue","label":"o","value":1.9989011347}],"chartOptions":{"xAxisLabel":"Amplitude","yAxisLabel":""}}}}}');var utils=__webpack_require__("./src/components/Classifier/components/SubjectViewer/components/ScatterPlotViewer/helpers/utils.js");function _toConsumableArray(r){return function _arrayWithoutHoles(r){if(Array.isArray(r))return _arrayLikeToArray(r)}(r)||function _iterableToArray(r){if("undefined"!=typeof Symbol&&null!=r[Symbol.iterator]||null!=r["@@iterator"])return Array.from(r)}(r)||function _unsupportedIterableToArray(r,a){if(r){if("string"==typeof r)return _arrayLikeToArray(r,a);var t={}.toString.call(r).slice(8,-1);return"Object"===t&&r.constructor&&(t=r.constructor.name),"Map"===t||"Set"===t?Array.from(r):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?_arrayLikeToArray(r,a):void 0}}(r)||function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(r,a){(null==a||a>r.length)&&(a=r.length);for(var e=0,n=Array(a);e<a;e++)n[e]=r[e];return n}src_default().global.colors["light-1"],src_default().global.font.family;var randomPoints=function genPoints(count,seed){void 0===count&&(count=300),void 0===seed&&(seed=void 0);var random=null==seed?void 0:normal.source(getSeededRandom(seed))(0,.2);return[].concat(genPointsRange(count,[sqrt3,1,0],random),genPointsRange(count,[-sqrt3,1,1],random),genPointsRange(count,[0,-1,2],random))}(),xPoints=randomPoints.map((function(point){return point[0]})),yPoints=randomPoints.map((function(point){return point[1]})),data={x:xPoints,y:yPoints},dataPoints=(_toConsumableArray(Array(10)).map((function(){return{x:Math.floor(10*Math.random())+1,y:Math.floor(10*Math.random())+1,x_error:Math.random()}})),_toConsumableArray(Array(10)).map((function(){return{x:Math.floor(10*Math.random())+1,y:Math.floor(10*Math.random())+1,y_error:Math.random()}})),zip_default()(data.x,data.y)),dataExtent={x:d3.Xxv(xPoints),y:d3.Xxv(yPoints)},margin={bottom:60,left:60,right:10,top:10},padding={bottom:0,left:0,right:0,top:0},xRangeMin=(0,utils.VU)({tickDirection:"outer",padding}),xRangeMax=(0,utils.pT)({tickDirection:"outer",parentWidth:768,margin}),yRangeMin=(0,utils.Oq)({tickDirection:"outer",padding}),yRangeMax=(0,utils.K7)({tickDirection:"outer",parentHeight:384,margin,padding}),keplerMockDataWithOptions=((0,linear.A)({domain:dataExtent.x,range:[xRangeMin,xRangeMax]}),(0,linear.A)({domain:dataExtent.y,range:[yRangeMax,yRangeMin]}),{data:kepler,chartOptions:{margin:{bottom:10,left:10,right:10,top:10},padding:{bottom:30,left:30,right:0,top:0},xAxisLabel:"Days",yAxisLabel:"Brightness"}}),randomSingleSeriesData=(variableStar_namespaceObject.p,{data,dataPoints,dataExtent}),rosie=__webpack_require__("../../node_modules/rosie/src/rosie.js"),jsx_runtime=__webpack_require__("../../node_modules/react/jsx-runtime.js");function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function _slicedToArray(r,e){return function _arrayWithHoles(r){if(Array.isArray(r))return r}(r)||function _iterableToArrayLimit(r,l){var t=null==r?null:"undefined"!=typeof Symbol&&r[Symbol.iterator]||r["@@iterator"];if(null!=t){var e,n,i,u,a=[],f=!0,o=!1;try{if(i=(t=t.call(r)).next,0===l){if(Object(t)!==t)return;f=!1}else for(;!(f=(e=i.call(t)).done)&&(a.push(e.value),a.length!==l);f=!0);}catch(r){o=!0,n=r}finally{try{if(!f&&null!=t.return&&(u=t.return(),Object(u)!==u))return}finally{if(o)throw n}}return a}}(r,e)||ScatterPlotViewer_stories_unsupportedIterableToArray(r,e)||function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function ScatterPlotViewer_stories_toConsumableArray(r){return function ScatterPlotViewer_stories_arrayWithoutHoles(r){if(Array.isArray(r))return ScatterPlotViewer_stories_arrayLikeToArray(r)}(r)||function ScatterPlotViewer_stories_iterableToArray(r){if("undefined"!=typeof Symbol&&null!=r[Symbol.iterator]||null!=r["@@iterator"])return Array.from(r)}(r)||ScatterPlotViewer_stories_unsupportedIterableToArray(r)||function ScatterPlotViewer_stories_nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function ScatterPlotViewer_stories_unsupportedIterableToArray(r,a){if(r){if("string"==typeof r)return ScatterPlotViewer_stories_arrayLikeToArray(r,a);var t={}.toString.call(r).slice(8,-1);return"Object"===t&&r.constructor&&(t=r.constructor.name),"Map"===t||"Set"===t?Array.from(r):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?ScatterPlotViewer_stories_arrayLikeToArray(r,a):void 0}}function ScatterPlotViewer_stories_arrayLikeToArray(r,a){(null==a||a>r.length)&&(a=r.length);for(var e=0,n=Array(a);e<a;e++)n[e]=r[e];return n}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _defineProperty(e,r,t){return(r=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(r))in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}var ScatterPlotViewer_stories_data=randomSingleSeriesData.data;function setZoomCallback(callback){0}var colors=src_default().global.colors,transientObjectSubject=rosie.$.build("subject",{locations:[{"application/json":"https://raw.githubusercontent.com/zooniverse/front-end-monorepo/978b660f4ef660d5355148c3c22ef0912b96c7c1/packages/lib-classifier/src/components/Classifier/components/SubjectViewer/helpers/mockLightCurves/transients/subject-1/zoo_subject_ZTF20abqdkne.json"}]}),storeWithTransientSubject=(0,mockStore.A)({subject:transientObjectSubject}),superWaspSubject=rosie.$.build("subject",{locations:[{"application/json":"https://panoptes-uploads.zooniverse.org/subject_location/f311cd2a-f6c7-4cc2-a411-0e32c5ff55e3.json"}]}),dataSelectionWorkflow=rosie.$.build("workflow",{tasks:{T0:{help:"",instruction:"If you spot a transit? If so, mark it!",required:!1,tools:[{type:"graph2dRangeX",label:"Transit?"},{type:"graph2dRangeX",label:"Something else"}],type:"dataVisAnnotation"},T1:{help:"",question:"Is there anything else to note?",answers:["yes","no"],type:"single"}}});function ViewerContext(_ref){var _ref$store=_ref.store,store=void 0===_ref$store?storeWithTransientSubject:_ref$store,children=_ref.children;return(0,jsx_runtime.jsx)(mobxreact_esm.Kq,{classifierStore:store,children})}ViewerContext.displayName="ViewerContext";const ScatterPlotViewer_stories={title:"Subject Viewers / ScatterPlotViewer",component:ScatterPlotViewer.A};function Default(props){return(0,jsx_runtime.jsx)(Box.a,{height:"medium",width:"large",children:(0,jsx_runtime.jsx)(ScatterPlotViewer.A,_objectSpread(_objectSpread({},props),{},{data:ScatterPlotViewer_stories_data,xAxisLabel:"x-axis",yAxisLabel:"y-axis"}))})}function NarrowView(){return(0,jsx_runtime.jsx)(Box.a,{height:"medium",width:"large",children:(0,jsx_runtime.jsx)(ScatterPlotViewer.A,{data:ScatterPlotViewer_stories_data,xAxisLabel:"x-axis",yAxisLabel:"y-axis"})})}function ErrorBars(props){var data=[{seriesData:function constructData(){return ScatterPlotViewer_stories_toConsumableArray(Array(60)).map((function(number,index){var coords={x:Math.floor(10*Math.random())+1,y:Math.floor(10*Math.random())+1};return index%2==0&&(coords.x_error=Math.random()),index%5==0&&(coords.y_error=Math.random()),coords}))}(),seriesOptions:{label:"data"}}];return(0,jsx_runtime.jsx)(ViewerContext,{children:(0,jsx_runtime.jsx)(Box.a,{direction:"row",height:"medium",width:"large",children:(0,jsx_runtime.jsx)(ScatterPlotViewer.A,_objectSpread(_objectSpread({},props),{},{data,panning:!0,setOnZoom:setZoomCallback,xAxisLabel:"x-axis",yAxisLabel:"y-axis",zooming:!0,zoomConfiguration:{direction:"both",minZoom:1,maxZoom:10,zoomInValue:1.2,zoomOutValue:.8}}))})})}function KeplerLightCurve(props){var tessChartOptions={axisColor:colors["light-1"],backgroundColor:(0,polished_esm.e$)(.08,colors["neutral-1"]),color:colors["light-1"],margin:{bottom:10,left:10,right:10,top:10},padding:{bottom:30,left:30,right:0,top:0},tickDirection:"inner",xAxisLabel:"Days",yAxisLabel:"Brightness",zoomConfiguration:{direction:"x",minZoom:1,maxZoom:10,zoomInValue:1.2,zoomOutValue:.8}};return(0,jsx_runtime.jsx)(Box.a,{height:"medium",width:"large",children:(0,jsx_runtime.jsx)(ScatterPlotViewer.A,_objectSpread(_objectSpread(_objectSpread({},props),{},{data:keplerMockDataWithOptions.data},tessChartOptions),{},{margin:keplerMockDataWithOptions.chartOptions.margin,padding:keplerMockDataWithOptions.chartOptions.padding,xAxisLabel:keplerMockDataWithOptions.chartOptions.xAxisLabel,yAxisLabel:keplerMockDataWithOptions.chartOptions.yAxisLabel}))})}function PanAndZoom(){return(0,jsx_runtime.jsx)(ViewerContext,{children:(0,jsx_runtime.jsxs)(Box.a,{direction:"row",height:"medium",width:"large",children:[(0,jsx_runtime.jsx)(JSONDataViewer.A,{zoomConfiguration:{direction:"both",minZoom:1,maxZoom:10,zoomInValue:1.2,zoomOutValue:.8}}),(0,jsx_runtime.jsx)(ImageToolbar.A,{width:"4rem"})]})})}function MultipleSeries(){return(0,jsx_runtime.jsx)(ViewerContext,{children:(0,jsx_runtime.jsxs)(Box.a,{direction:"row",height:"medium",width:"large",children:[(0,jsx_runtime.jsx)(JSONDataViewer.A,{}),(0,jsx_runtime.jsx)(ImageToolbar.A,{width:"4rem"})]})})}function XRangeSelection(_ref2){var _task$setActiveTool,_ref2$activeToolIndex=_ref2.activeToolIndex,activeToolIndex=void 0===_ref2$activeToolIndex?0:_ref2$activeToolIndex,_ref2$activeStep=_ref2.activeStep,activeStep=void 0===_ref2$activeStep?"S1":_ref2$activeStep;XRangeSelection.store.workflowSteps.selectStep(activeStep);var task=_slicedToArray(XRangeSelection.store.workflowSteps.active.tasks,1)[0];return null===(_task$setActiveTool=task.setActiveTool)||void 0===_task$setActiveTool||_task$setActiveTool.call(task,activeToolIndex),(0,jsx_runtime.jsx)(ViewerContext,{store:XRangeSelection.store,children:(0,jsx_runtime.jsxs)(Box.a,{direction:"row",height:"medium",width:"large",children:[(0,jsx_runtime.jsx)(JSONDataViewer.A,{experimentalSelectionTool:!0,zoomConfiguration:{direction:"x",minZoom:1,maxZoom:10,zoomInValue:1.2,zoomOutValue:.8}}),(0,jsx_runtime.jsx)(ImageToolbar.A,{width:"4rem"})]})})}function SelectedXRanges(){var task=_slicedToArray(SelectedXRanges.store.workflowSteps.findTasksByType("dataVisAnnotation"),1)[0];return SelectedXRanges.store.classifications.addAnnotation(task,[{tool:0,toolType:"graph2dRangeX",x:98,width:6,zoomLevelOnCreation:0},{tool:0,toolType:"graph2dRangeX",x:110,width:6,zoomLevelOnCreation:0},{tool:1,toolType:"graph2dRangeX",x:116,width:4,zoomLevelOnCreation:0}]),(0,jsx_runtime.jsx)(ViewerContext,{store:SelectedXRanges.store,children:(0,jsx_runtime.jsxs)(Box.a,{direction:"row",height:"medium",width:"large",children:[(0,jsx_runtime.jsx)(JSONDataViewer.A,{disabled:!0,experimentalSelectionTool:!0,zoomConfiguration:{direction:"x",minZoom:1,maxZoom:10,zoomInValue:1.2,zoomOutValue:.8}}),(0,jsx_runtime.jsx)(ImageToolbar.A,{width:"4rem"})]})})}function SelectionFeedback(){var task=_slicedToArray(SelectedXRanges.store.workflowSteps.findTasksByType("dataVisAnnotation"),1)[0];SelectedXRanges.store.classifications.addAnnotation(task,[{tool:0,toolType:"graph2dRangeX",x:98,width:6,zoomLevelOnCreation:0},{tool:0,toolType:"graph2dRangeX",x:110,width:6,zoomLevelOnCreation:0},{tool:1,toolType:"graph2dRangeX",x:116,width:4,zoomLevelOnCreation:0}]);return(0,jsx_runtime.jsx)(ViewerContext,{store:SelectedXRanges.store,children:(0,jsx_runtime.jsxs)(Box.a,{direction:"row",height:"medium",width:"large",children:[(0,jsx_runtime.jsx)(JSONDataViewer.A,{disabled:!0,experimentalSelectionTool:!0,feedbackBrushes:[{id:1,minX:95,maxX:101},{id:2,minX:107,maxX:113},{id:3,minX:114,maxX:118},{id:"simulated_rule",minX:90,maxX:102,success:!0},{id:"simulated_rule",minX:124,maxX:134,success:!1}],zoomConfiguration:{direction:"x",minZoom:1,maxZoom:10,zoomInValue:1.2,zoomOutValue:.8}}),(0,jsx_runtime.jsx)(ImageToolbar.A,{width:"4rem"})]})})}Default.displayName="Default",NarrowView.displayName="NarrowView",NarrowView.parameters={viewport:{defaultViewport:"iphone5"}},ErrorBars.displayName="ErrorBars",KeplerLightCurve.displayName="KeplerLightCurve",PanAndZoom.displayName="PanAndZoom",MultipleSeries.displayName="MultipleSeries",XRangeSelection.displayName="XRangeSelection",XRangeSelection.store=(0,mockStore.A)({subject:superWaspSubject,workflow:dataSelectionWorkflow}),XRangeSelection.argTypes={activeToolIndex:{options:[0,1],control:{type:"select",labels:{0:"Transit?",1:"Something else?"}}},activeStep:{options:["S1","S2"],control:{type:"select",labels:{S1:"Select data",S2:"Answer a question"}}}},SelectedXRanges.displayName="SelectedXRanges",SelectedXRanges.store=(0,mockStore.A)({subject:superWaspSubject,workflow:dataSelectionWorkflow}),SelectionFeedback.displayName="SelectionFeedback",SelectedXRanges.store=(0,mockStore.A)({subject:superWaspSubject,workflow:dataSelectionWorkflow}),Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"function Default(props) {\n  return <Box height='medium' width='large'>\n      <ScatterPlotViewer {...props} data={data} xAxisLabel='x-axis' yAxisLabel='y-axis' />\n    </Box>;\n}",...Default.parameters?.docs?.source}}},NarrowView.parameters={...NarrowView.parameters,docs:{...NarrowView.parameters?.docs,source:{originalSource:"function NarrowView() {\n  return <Box height='medium' width='large'>\n      <ScatterPlotViewer data={data} xAxisLabel='x-axis' yAxisLabel='y-axis' />\n    </Box>;\n}",...NarrowView.parameters?.docs?.source}}},ErrorBars.parameters={...ErrorBars.parameters,docs:{...ErrorBars.parameters?.docs,source:{originalSource:"function ErrorBars(props) {\n  function constructData() {\n    return [...Array(60)].map((number, index) => {\n      const coords = {\n        x: Math.floor(Math.random() * 10) + 1,\n        y: Math.floor(Math.random() * 10) + 1\n      };\n      if (index % 2 == 0) coords.x_error = Math.random();\n      if (index % 5 == 0) coords.y_error = Math.random();\n      return coords;\n    });\n  }\n  const data = [{\n    seriesData: constructData(),\n    seriesOptions: {\n      label: 'data'\n    }\n  }];\n  return <ViewerContext>\n      <Box direction='row' height='medium' width='large'>\n        <ScatterPlotViewer {...props} data={data} panning setOnZoom={setZoomCallback} xAxisLabel='x-axis' yAxisLabel='y-axis' zooming zoomConfiguration={{\n        direction: 'both',\n        minZoom: 1,\n        maxZoom: 10,\n        zoomInValue: 1.2,\n        zoomOutValue: 0.8\n      }} />\n      </Box>\n    </ViewerContext>;\n}",...ErrorBars.parameters?.docs?.source}}},KeplerLightCurve.parameters={...KeplerLightCurve.parameters,docs:{...KeplerLightCurve.parameters?.docs,source:{originalSource:"function KeplerLightCurve(props) {\n  const tessChartOptions = {\n    axisColor: colors['light-1'],\n    backgroundColor: darken(0.08, colors['neutral-1']),\n    color: colors['light-1'],\n    margin: {\n      bottom: 10,\n      left: 10,\n      right: 10,\n      top: 10\n    },\n    padding: {\n      bottom: 30,\n      left: 30,\n      right: 0,\n      top: 0\n    },\n    tickDirection: 'inner',\n    xAxisLabel: 'Days',\n    yAxisLabel: 'Brightness',\n    zoomConfiguration: {\n      direction: 'x',\n      minZoom: 1,\n      maxZoom: 10,\n      zoomInValue: 1.2,\n      zoomOutValue: 0.8\n    }\n  };\n  return <Box height='medium' width='large'>\n      <ScatterPlotViewer {...props} data={keplerMockDataWithOptions.data} {...tessChartOptions} margin={keplerMockDataWithOptions.chartOptions.margin} padding={keplerMockDataWithOptions.chartOptions.padding} xAxisLabel={keplerMockDataWithOptions.chartOptions.xAxisLabel} yAxisLabel={keplerMockDataWithOptions.chartOptions.yAxisLabel} />\n    </Box>;\n}",...KeplerLightCurve.parameters?.docs?.source}}},PanAndZoom.parameters={...PanAndZoom.parameters,docs:{...PanAndZoom.parameters?.docs,source:{originalSource:"function PanAndZoom() {\n  return <ViewerContext>\n      <Box direction='row' height='medium' width='large'>\n        <JSONDataViewer zoomConfiguration={{\n        direction: 'both',\n        minZoom: 1,\n        maxZoom: 10,\n        zoomInValue: 1.2,\n        zoomOutValue: 0.8\n      }} />\n        <ImageToolbar width='4rem' />\n      </Box>\n    </ViewerContext>;\n}",...PanAndZoom.parameters?.docs?.source}}},MultipleSeries.parameters={...MultipleSeries.parameters,docs:{...MultipleSeries.parameters?.docs,source:{originalSource:"function MultipleSeries() {\n  return <ViewerContext>\n      <Box direction='row' height='medium' width='large'>\n        <JSONDataViewer />\n        <ImageToolbar width='4rem' />\n      </Box>\n    </ViewerContext>;\n}",...MultipleSeries.parameters?.docs?.source}}},XRangeSelection.parameters={...XRangeSelection.parameters,docs:{...XRangeSelection.parameters?.docs,source:{originalSource:"function XRangeSelection({\n  activeToolIndex = 0,\n  activeStep = 'S1'\n}) {\n  XRangeSelection.store.workflowSteps.selectStep(activeStep);\n  const [task] = XRangeSelection.store.workflowSteps.active.tasks;\n  task.setActiveTool?.(activeToolIndex);\n  return <ViewerContext store={XRangeSelection.store}>\n      <Box direction='row' height='medium' width='large'>\n        <JSONDataViewer experimentalSelectionTool zoomConfiguration={{\n        direction: 'x',\n        minZoom: 1,\n        maxZoom: 10,\n        zoomInValue: 1.2,\n        zoomOutValue: 0.8\n      }} />\n        <ImageToolbar width='4rem' />\n      </Box>\n    </ViewerContext>;\n}",...XRangeSelection.parameters?.docs?.source}}},SelectedXRanges.parameters={...SelectedXRanges.parameters,docs:{...SelectedXRanges.parameters?.docs,source:{originalSource:"function SelectedXRanges() {\n  const [task] = SelectedXRanges.store.workflowSteps.findTasksByType('dataVisAnnotation');\n  SelectedXRanges.store.classifications.addAnnotation(task, [{\n    tool: 0,\n    toolType: 'graph2dRangeX',\n    x: 98,\n    width: 6,\n    zoomLevelOnCreation: 0\n  }, {\n    tool: 0,\n    toolType: 'graph2dRangeX',\n    x: 110,\n    width: 6,\n    zoomLevelOnCreation: 0\n  }, {\n    tool: 1,\n    toolType: 'graph2dRangeX',\n    x: 116,\n    width: 4,\n    zoomLevelOnCreation: 0\n  }]);\n  return <ViewerContext store={SelectedXRanges.store}>\n      <Box direction='row' height='medium' width='large'>\n        <JSONDataViewer disabled experimentalSelectionTool zoomConfiguration={{\n        direction: 'x',\n        minZoom: 1,\n        maxZoom: 10,\n        zoomInValue: 1.2,\n        zoomOutValue: 0.8\n      }} />\n        <ImageToolbar width='4rem' />\n      </Box>\n    </ViewerContext>;\n}",...SelectedXRanges.parameters?.docs?.source}}},SelectionFeedback.parameters={...SelectionFeedback.parameters,docs:{...SelectionFeedback.parameters?.docs,source:{originalSource:"function SelectionFeedback() {\n  const [task] = SelectedXRanges.store.workflowSteps.findTasksByType('dataVisAnnotation');\n  SelectedXRanges.store.classifications.addAnnotation(task, [{\n    tool: 0,\n    toolType: 'graph2dRangeX',\n    x: 98,\n    width: 6,\n    zoomLevelOnCreation: 0\n  }, {\n    tool: 0,\n    toolType: 'graph2dRangeX',\n    x: 110,\n    width: 6,\n    zoomLevelOnCreation: 0\n  }, {\n    tool: 1,\n    toolType: 'graph2dRangeX',\n    x: 116,\n    width: 4,\n    zoomLevelOnCreation: 0\n  }]);\n  const feedbackBrushes = [{\n    id: 1,\n    minX: 95,\n    maxX: 101\n  }, {\n    id: 2,\n    minX: 107,\n    maxX: 113\n  }, {\n    id: 3,\n    minX: 114,\n    maxX: 118\n  }, {\n    id: 'simulated_rule',\n    minX: 90,\n    maxX: 102,\n    success: true\n  }, {\n    id: 'simulated_rule',\n    minX: 124,\n    maxX: 134,\n    success: false\n  }];\n  return <ViewerContext store={SelectedXRanges.store}>\n      <Box direction='row' height='medium' width='large'>\n        <JSONDataViewer disabled experimentalSelectionTool feedbackBrushes={feedbackBrushes} zoomConfiguration={{\n        direction: 'x',\n        minZoom: 1,\n        maxZoom: 10,\n        zoomInValue: 1.2,\n        zoomOutValue: 0.8\n      }} />\n        <ImageToolbar width='4rem' />\n      </Box>\n    </ViewerContext>;\n}",...SelectionFeedback.parameters?.docs?.source}}};const __namedExportsOrder=["Default","NarrowView","ErrorBars","KeplerLightCurve","PanAndZoom","MultipleSeries","XRangeSelection","SelectedXRanges","SelectionFeedback"]},"./src/components/Classifier/components/SubjectViewer/helpers/mockLightCurves/kepler.json":module=>{module.exports=JSON.parse('{"x":[0.015972205804938,0.04930550156764,0.082638792522469,0.11597207901833,0.14930536138996,0.18263863995383,0.21597191500613,0.24930518682579,0.28263845567079,0.31597172177973,0.34930498537301,0.38263824665709,0.41597150581901,0.4493047630331,0.4826380184585,0.51597127224137,0.54930452451779,0.58263777541241,0.61597102503736,0.64930427349969,0.68263752089608,0.71597076731598,0.74930401284154,0.78263725754977,0.81597050150796,0.84930374478555,0.88263698743985,0.91597022952691,0.94930347109921,0.9826367122031,1.0159699528847,1.049303193184,1.0826364331422,1.1159696727918,1.1493029121674,1.1826361513004,1.2159693902194,1.2493026289514,1.2826358675229,1.3159691059559,1.3493023442732,1.3826355824964,1.4159688206438,1.4493020587349,1.4826352967859,1.5159685348133,1.5493017728328,1.5826350108581,1.6159682489018,1.649301486978,1.6826347250988,1.7159679632735,1.7493012015143,1.7826344398309,1.8159676782327,1.8493009167297,1.8826341553279,1.9159673940371,1.9493006328649,1.9826338718175,2.0159671109032,2.0493003501272,2.0826335894961,2.115966829015,2.1493000686904,2.1826333085286,2.2159665485314,2.2492997887061,2.2826330290567,2.315966269587,2.3492995103004,2.3826327512033,2.4159659922969,2.449299233586,2.4826324750743,2.5159657167631,2.5492989586582,2.5826322007598,2.6159654430733,2.6492986855988,2.682631928341,2.7159651713009,2.7492984144824,2.7826316578858,2.8159649015147,2.8492981453711,2.8826313894563,2.9159646337744,2.9492978783222,2.9826311231056,3.0159643681264,3.0492976133843,3.0826308588816,3.1159641046206,3.1492973506019,3.1826305968265,3.2159638432967,3.2492970900125,3.2826303369769,3.3159635841908,3.3492968316524,3.3826300793677,3.4159633273331,3.4492965755532,3.4826298240283,3.5159630727562,3.5492963217417,3.5826295709853,3.6159628204857,3.6492960702458,3.6826293202658,3.7159625705468,3.7492958210882,3.7826290718931,3.8159623229584,3.8492955742899,3.882628825886,3.9159620777459,3.9492953298732,3.9826285822657,4.0159618349275,4.0492950878542,4.082628341052,4.1159615945174,4.1492948482536,4.1826281022593,4.2159613565363,4.2492946110862,4.2826278659071,4.3159611210005,4.3492943763674,4.3826276320099,4.4159608879246,4.4492941441161,4.4826274005826,4.515960657325,4.5492939143435,4.5826271716407,4.615960429214,4.6492936870681,4.682626945198,4.7159602036087,4.7492934623004,4.7826267212698,4.8159599805227,4.8492932400566,4.8826264998721,4.9159597599699,4.9492930203509,4.982626281014,5.0159595419637,5.0492928031966,5.0826260647156,5.1159593265199,5.1492925886086,5.1826258509858,5.2159591136505,5.2492923766035,5.2826256398436,5.3159589033726,5.3492921671927,5.382625431301,5.4159586957001,5.4492919603918,5.4826252253735,5.5159584906488,5.5492917562163,5.5826250220778,5.6159582882322,5.6492915546832,5.6826248214281,5.7159580884687,5.7492913558055,5.7826246234399,5.815957891373,5.8492911596026,5.8826244281326,5.9159576969622,5.9492909660909,5.9826242355207,6.0159575052537,6.0492907752877,6.0826240456243,6.1159573162656,6.1492905872106,6.1826238584609,6.2159571300168,6.2492904018789,6.2826236740478,6.3159569465272,6.3492902193124,6.3826234924081,6.4159567658142,6.4492900395311,6.4826233135605,6.5159565879013,6.5492898625564,6.5826231375254,6.6159564128105,6.649289688411,6.682622964327,6.7159562405622,6.7492895171152,6.782622793988,6.8159560711807,6.8492893486953,6.8826226265309,6.9159559046907,6.9492891831736,6.9826224619812,7.0159557411162,7.0492890205784,7.0826223003682,7.1159555804855,7.1492888609339,7.1826221417139,7.2159554228261,7.2492887042698,7.2826219860496,7.3159552681635,7.3492885506152,7.3826218334043,7.4159551165311,7.4492883999992,7.4826216838075,7.51595496796,7.549288252454,7.5826215372943,7.6159548224811,7.6492881080132,7.6826213938958,7.7159546801279,7.749287966712,7.7826212536472,7.8159545409379,7.8492878285828,7.8826211165854,7.9159544049467,7.9492876936678,7.9826209827487,8.0159542721935,8.0492875620035,8.0826208521771,8.1159541427193,8.1492874336308,8.1826207249124,8.215954016566,8.2492873085941,8.2826206009977,8.3159538937785,8.3492871869379,8.3826204804791,8.4159537744019,8.4492870687103,8.4826203634031,8.5159536584855,8.5492869539581,8.5826202498227,8.6159535460808,8.6492868427351,8.6826201397884,8.715953437241,8.7492867350961,8.7826200333545,8.8159533320206,8.849286631096,8.8826199305822,8.9159532304798,8.9492865307945,8.9826198315279,9.0159531326806,9.0492864342562,9.0826197362574,9.1159530386864,9.1492863415468,9.182619644839,9.2159529485676,9.2492862527344,9.2826195573413,9.3159528623933,9.3492861678909,9.3826194738397,9.4159527802405,9.449286087096,9.4826193944114,9.5159527021886,9.5492860104295,9.5826193191395,9.6159526283218,9.649285937978,9.6826192481119,9.7159525587279,9.7492858698304,9.7826191814199,9.8159524935029,9.8492858060821,9.8826191191607,9.9159524327447,9.9492857468361,9.982619061439,10.015952376557,10.049285692198,10.08261900836,10.115952325054,10.14928564228,10.182618960045,10.215952278351,10.249285597207,10.282618916613,10.315952236577,10.349285557102,10.382618878197,10.415952199862,10.449285522107,10.482618844934,10.515952168353,10.549285492365,10.582618816978,10.615952142197,10.649285468031,10.682618794484,10.715952121562,10.749285449271,10.782618777621,10.815952106616,10.849285436265,10.882618766574,10.915952097552,10.949285429203,10.982618761538,11.015952094564,11.04928542829,11.082618762722,11.115952097872,11.149285433746,11.182618770354,11.215952107706,11.249285445811,11.282618784678,11.315952124318,11.349285464743,11.38261880596,11.415952147981,11.449285490817,11.482618834483,11.515952178987,11.549285524342,11.582618870561,11.615952217657,11.649285565644,11.682618914533,11.715952264341,11.749285615081,11.782618966769,11.815952319419,11.849285673049,11.882619027673,11.915952383309,11.949285739976,11.982619097689,12.015952456469,12.049285816335,12.082619177305,12.115952539402,12.149285902646,12.182619267059,12.215952632665,12.249285999485,12.282619367545,12.315952736868,12.349286107484,12.382619479416,12.415952852695,12.449286227346,12.482619603402,12.515952980893,12.54928635985,12.582619740306,12.615953122296,12.649286505855,12.682619891018,12.715953277824,12.74928666631,12.782620056517,12.815953448484,12.849286842257,12.882620237873,12.915953635379,12.949287034819,12.982620436236,13.015953839677,13.049287245186,13.082620652807,13.115954062583,13.149287474556,13.182620888764,13.215954305242,13.24928772402,13.282621145121,13.315954568557,13.349287994334,13.382621422437,13.415954852836,13.449288285477,13.482621720278,13.515955157118,13.549288595837,13.582622036219,13.615955477988,13.649288920788,13.682622364187,13.71595580765,13.74928925054,13.782622692111,13.81595613151,13.849289567788,14.085748392278,14.186790221647,14.220123569106,14.253456907675,14.286790237869,14.32012356025,14.353456875409,14.386790183936,14.420123486405,14.453456783364,14.486790075325,14.520123362767,14.553456646127,14.586789925804,14.62012320216,14.653456475529,14.686789746204,14.720123014455,14.753456280524,14.78678954463,14.820122806967,14.853456067716,14.886789327034,14.920122585066,14.953455841944,14.986789097784,15.020122352695,15.053455606773,15.086788860107,15.120122112777,15.153455364858,15.186788616413,15.220121867507,15.253455118194,15.286788368523,15.320121618543,15.353454868297,15.386788117824,15.420121367159,15.453454616338,15.486787865389,15.520121114343,15.553454363225,15.58678761206,15.620120860867,15.653454109672,15.686787358491,15.720120607343,15.753453856245,15.786787105211,15.820120354257,15.853453603395,15.88678685264,15.920120102,15.95345335149,15.986786601115,16.020119850891,16.053453100821,16.086786350916,16.120119601184,16.153452851631,16.186786102265,16.220119353091,16.253452604117,16.286785855347,16.320119106786,16.353452358441,16.386785610316,16.420118862412,16.453452114738,16.486785367295,16.520118620089,16.553451873121,16.586785126395,16.620118379914,16.653451633681,16.6867848877,16.720118141971,16.753451396498,16.786784651284,16.820117906328,16.853451161637,16.886784417208,16.920117673047,16.953450929152,16.986784185527,17.020117442173,17.053450699092,17.086783956284,17.120117213752,17.153450471496,17.186783729517,17.220116987817,17.253450246396,17.286783505258,17.3201167644,17.353450023823,17.386783283532,17.420116543524,17.453449803802,17.486783064365,17.520116325215,17.553449586353,17.586782847778,17.620116109491,17.653449371494,17.686782633786,17.72011589637,17.753449159242,17.786782422407,17.820115685864,17.853448949612,17.886782213654,17.920115477989,17.953448742617,17.98678200754,18.020115272756,18.053448538267,18.086781804074,18.120115070176,18.153448336574,18.186781603268,18.220114870259,18.253448137546,18.286781405133,18.320114673014,18.353447941195,18.386781209674,18.42011447845,18.453447747526,18.486781016902,18.520114286576,18.55344755655,18.586780826824,18.620114097399,18.653447368274,18.686780639451,18.720113910929,18.753447182708,18.786780454788,18.820113727172,18.853446999858,18.886780272846,18.920113546138,18.953446819733,18.986780093631,19.020113367835,19.053446642341,19.086779917154,19.120113192271,19.153446467693,19.186779743421,19.220113019455,19.253446295795,19.286779572442,19.320112849397,19.353446126659,19.386779404229,19.420112682107,19.453445960294,19.48677923879,19.520112517596,19.553445796711,19.586779076136,19.620112355871,19.653445635918,19.686778916277,19.720112196949,19.753445477932,19.786778759228,19.820112040838,19.853445322761,19.886778604998,19.920111887552,19.95344517042,19.986778453603,20.020111737104,20.053445020921,20.086778305054,20.120111589507,20.153444874279,20.186778159369,20.220111444779,20.253444730507,20.286778016559,20.320111302932,20.353444589626,20.386777876644,20.420111163984,20.453444451649,20.486777739639,20.520111027954,20.553444316595,20.586777605563,20.620110894858,20.653444184481,20.686777474433,20.720110764715,20.753444055327,20.786777346271,20.820110637548,20.853443929156,20.886777221098,20.920110513375,20.953443805986,20.986777098935,21.02011039222,21.053443685843,21.086776979805,21.120110274108,21.153443568749,21.186776863734,21.22011015906,21.25344345473,21.286776750745,21.320110047105,21.353443343812,21.386776640867,21.420109938271,21.453443236024,21.486776534127,21.520109832584,21.553443131392,21.586776430556,21.620109730075,21.65344302995,21.686776330184,21.720109630776,21.753442931729,21.786776233044,21.820109534721,21.853442836762,21.88677613917,21.920109441944,21.953442745086,21.986776048597,22.020109352481,22.053442656737,22.086775961366,22.12010926637,22.153442571753,22.186775877513,22.220109183653,22.253442490176,22.286775797082,22.320109104372,22.35344241205,22.386775720115,22.420109028571,22.453442337417,22.486775646659,22.520108956296,22.553442266329,22.586775576762,22.620108887595,22.653442198832,22.686775510474,22.720108822522,22.753442134979,22.786775447847,22.820108761129,22.853442074827,22.886775388941,22.920108703475,22.953442018431,22.986775333812,23.020108649619,23.053441965855,23.086775282521,23.120108599623,23.15344191716,23.186775235136,23.220108553554,23.253441872415,23.286775191724,23.320108511481,23.353441831692,23.386775152357,23.42010847348,23.453441795064,23.486775117111,23.520108439626,23.55344176261,23.586775086069,23.620108410003,23.653441734417,23.686775059314,23.720108384697,23.753441710571,23.786775036937,23.8201083638,23.853441691164,23.886775019032,23.92010834741,23.953441676297,23.986775005702,24.020108335626,24.053441666075,24.086774997052,24.120108328561,24.153441660609,24.186774993196,24.22010832633,24.253441660014,24.286774994255,24.320108329055,24.353441664422,24.386775000358,24.420108336868,24.453441673961,24.48677501164,24.520108349908,24.553441688776,24.586775028247,24.620108368325,24.653441709019,24.686775050334,24.720108392277,24.753441734854,24.78677507807,24.820108421934,24.853441766452,24.886775111632,24.920108457481,24.953441804004,24.986775151212,25.020108499112,25.05344184771,25.086775197017,25.120108547038,25.153441897786,25.186775249266,25.22010860149,25.253441954466,25.286775308203,25.320108662712,25.353442018003,25.386775374085,25.420108730971,25.453442088671,25.486775447195,25.520108806557,25.553442166768,25.586775527839,25.620108889784,25.653442252618,25.686775616351,25.720108980999,25.753442346575,25.786775713097,25.820109080576,25.853442449029,25.886775818475,25.920109188927,25.953442560404,25.986775932926,26.020109306507,26.05344268117,26.086776056934,26.120109433819,26.153442811845,26.186776191035,26.220109571412,26.253442953,26.286776335822,26.320109719904,26.353443105271,26.386776491951,26.420109879973,26.453443269363,26.486776660155,26.520110052377,26.553443446063,26.586776841246,26.62011023796,26.653443636239,26.686777036125,26.720110437653,26.75344384086,26.786777245791,26.820110652486,26.853444060987,26.886777471339,26.920110883586,26.953444297773,26.986777713947,27.020111132154,27.053444552438,27.086777974846,27.120111399419,27.153444826199,27.186778255227,27.220111686534,27.253445120144,27.286778556078,27.32011199434,27.353445434924,27.386778877804,27.420112322928,27.453445770212,27.48677921954,27.520112670743,27.553446123599,27.586779577809,27.620113032999,27.653446488691,27.686779944295,27.720113399099,27.753446852263,27.786780302817],"y":[0.51994125048319,-0.81781297922134,0.52034854888916,0.47201414903005,-0.63768029212952,-0.35996238390605,-0.25086353222529,0.28317173322042,-0.42719642321269,0.84527830282847,-0.8287305633227,-0.1284380753835,0.81051637729009,-0.51442285378774,0.67840764919917,0.10424604018529,1.4039228359858,1.0020881891251,0.58504194021225,0.066036979357402,0.31168510516485,1.1315469940503,0.87849795818329,0.47643731037776,2.0488674441973,-0.24104615052541,0.61169515053431,-0.61837832132975,0.03756582736969,0.75098127126694,1.0540038347244,0.077858567237854,0.2033586303393,1.8887668848038,0.37315487861633,0.61459590991338,1.174750427405,0.33564865589142,0.42514503002167,-0.44021507104238,-0.10087092717489,-0.35768002271652,1.2181649605433,0.84587683280309,0.75253595908483,1.6066531340281,1.5377129117648,1.980684697628,0.921331346035,0.45404583215714,0.35696725050608,1.19732071956,0.30986219644547,0.92153747876485,-0.30433138211568,0.0065018733342489,1.5377029776573,0.10818739732107,1.2601713339488,0.81535925467809,0.56794782479604,0.36135315895081,0.5222608645757,-0.052745143572489,0.29662748177846,1.0922575990359,-0.45138597488403,0.60112774372101,0.49840410550435,1.2027472257614,0.74425339698792,1.3372724254926,0.93873838583628,0.58793276548386,1.4235948522886,0.52612771590551,0.2062867085139,-0.22835284471512,0.59232364098231,1.157745718956,-0.39131939411163,0.37953009208043,0.36153693993886,0.307930012544,1.0230243206024,0.63443432251612,0.75325618187586,0.91525912284851,1.1714026331902,0.30349443356196,0.96731384595235,0.83174804846446,0.86107601722082,1.0613625248273,-0.26357670625051,0.58053682247798,1.3789981603622,-0.5346288283666,1.0837266842524,1.1441831787427,-0.45178085565567,0.14372169971466,-0.34523258606593,0.42216231425603,0.54923196633657,1.5978068113327,0.9494423866272,0.58300048112869,2.483069896698,0.77254076798757,0.80190102259318,0.83371500174205,0.86388488610586,1.5436187386513,-0.2835343281428,0.36469598611196,0.84106375773748,1.2478729089101,0.55685887734095,0.55749962727229,-1.7463167508443,-1.5901426474253,0.14100968837738,0.27881314357122,1.7188563942909,0.64676503340403,0.26369343201319,0.3943790992101,-0.0095640619595846,-0.19525984923045,0.41361898183823,0.30477344989777,-0.62512358029683,-0.27253727118174,-2.1065423885981,-1.0981435577075,0.18172214428584,-0.52012751499812,0.50157556931178,1.2832979361216,-0.61699996391932,0.7696325580279,0.11220326026281,0.76893220345179,0.75821826855342,0.1044770081838,0.66869705915451,-0.33796826998393,1.0787919163704,-0.26059647401174,0.11333574851354,0.81725418567657,0.61961511770884,-0.1226266225179,0.47019124031067,0.4404013355573,-0.93400230010351,0.58977057536443,0.56750327348709,0.16033152739207,0.041616459687551,1.2036884824435,0.005766749382019,-0.27588258186976,0.97321222225825,0.11855363845825,0.68775564432144,0.081794957319895,0.46269843975703,0.11859585841497,1.0554442803065,0.18750379482905,-0.40882577498754,-0.16445914904277,-0.18339852492015,-0.32760202884674,-0.089546044667562,-0.20339836676915,0.79661359389623,0.018554429213206,-0.25647381941477,0.05422035853068,1.3214300076167,-0.015151997407277,-0.40867179632187,-0.51971028248469,0.67038089036942,-1.166378458341,1.1245633165042,-0.71803728739421,-0.26489794254303,0.18983831008275,1.1809120575587,0.53041925032934,-0.015112260977427,0.47929584980011,0.79601009686788,0.78889975945155,-0.37221610546112,-0.2174178759257,1.031868159771,0.0027169783910116,-0.038998822371165,0.34852574268977,-0.22363662719727,-0.043469170729319,-0.058735410372416,0.4144087433815,0.39056440194448,-1.1293937762578,-1.1823922395706,-0.11495997508367,0.26470919450124,-0.3285159667333,0.19817302624385,-0.35081307093302,-0.050485134124756,0.40074189503988,-0.82385541995366,-0.21150211493174,0.72021782398224,0.19953151543935,0.24974842866262,0.4463866353035,-0.64533700545629,0.13690193494161,0.46977897485097,-0.56880215803782,0.08442501227061,0.19234418869019,-0.061213970184326,-0.22626668214798,-1.2693578998248,-1.2588898340861,-0.041663646697998,0.40652354558309,-0.40120631456375,-0.44923275709152,0.74514995018641,-0.022811194260915,0.15537192424138,-0.13622144858042,0.097749133904775,-0.2536674340566,-0.91147174437841,-0.46076625585556,-0.32005955775579,0.62608967224757,0.5088672041893,0.42743235826492,0.51058580478032,1.7299875617027,0.12778242429097,1.1159380276998,-0.37201990683873,0.89163333177567,0.19067774216334,0.59092541535695,1.262495915095,-0.42405972878138,0.028746823469798,0.46725322802862,0.2614880601565,0.012964010238647,0.085517764091492,0.26390701532364,1.0435928901037,-0.069196025530497,-0.1593679189682,-0.21284570296605,0.17557293176651,1.156747341156,0.19217034180959,-1.2794161836306,-0.42552004257838,-0.85264444351196,0.19941727320353,-0.16055007775625,0.024624168872833,-1.2336547176043,-0.26421993970871,-0.50543000300725,-0.13838956753413,-0.3094623486201,-0.80379843711853,0.21947423617045,-0.016761322816213,0.76492875814438,0.3500704964002,-1.1071686943372,-0.66720694303513,0.17516314983368,-0.77031552791595,-0.73907772699992,-0.94328324000041,0.91652075449626,-0.1094490091006,-0.35014500220617,0.33885985612869,-1.2075950702031,0.17085919777552,-0.012015302975972,0.4610816637675,-1.0408113400141,-0.55489440759023,-0.9365901350975,-0.16020238399506,0.37376334269842,0.31927973031998,-0.27757634719213,-0.67842751741409,0.13987471659978,0.26302287975947,-1.1486758788427,0.24911512931188,-0.63648074865341,-2.4868845939636,-2.8929909070333,-1.6980171203613,-0.77583144108454,-2.4937962293625,0.1861701409022,0.15988697608312,0.069824357827504,-1.1160100499789,-0.33298134803772,-0.38332988818487,0.25349855422974,-0.9467750787735,-1.6125316421191,-0.50438195466995,-0.7603665192922,-0.58501213788986,-0.69673111041387,-0.87086608012517,-0.87642172972361,-1.3057539860408,-0.24562577406565,-0.96868971983592,-0.42500098546346,-1.1582697431246,-0.49018114805222,-0.88295340538025,-0.90528776248296,0.0060846408208211,-1.1144677797953,0.42202075322469,-1.3889744877815,-0.91776003440221,-0.33685813347499,-0.1620277762413,-2.3499354918798,-0.49186249574025,-0.9376605351766,-1.1070470015208,-1.1895025769869,-1.279354095459,-0.57760874430339,-0.59252480665843,-0.28922160466512,0.12418876091639,-0.33697734276454,-1.3656914234161,-0.66995372374853,-1.4122277498245,-1.6584421197573,-1.0072241226832,-1.9158249100049,-1.5972356001536,-0.6637250383695,-1.5239119529724,-2.3971448342005,-1.213197906812,-1.3484160105387,0.16143421332041,-1.3433620333672,-0.67175428072611,-1.4670367042224,-0.15466908613841,-1.8003210425377,-0.306469698747,-1.1576637625694,-0.81340968608856,-1.0185316205025,-1.2998357415199,-0.17385681470235,-1.4440690477689,-1.1806512872378,-1.437763373057,-2.3697937528292,-1.6427114605904,-0.68103770414988,-1.0140786767006,-1.2703239917755,-1.3403072953224,-2.5244206190109,-1.9443978667259,-1.8853594859441,-2.0013724764188,-2.329317231973,-0.1732607682546,-1.8428216377894,-2.309779326121,-1.6129165887833,0.045023858547211,-0.55874635775884,-0.47353903452555,-0.37770469983419,-1.3057092825572,-0.86064636707306,-0.55591017007828,-0.74260433514913,-0.25055557489395,-0.11250376701355,-0.56531776984533,-1.3486568927765,-0.50708403189977,-0.62029808759689,-1.0863567392031,-0.48753122488658,1.0059848427773,-1.0295187433561,0.014270345369975,1.0938122868538,0.52826354900996,0.73172648747762,0.83623081445694,0.4799763361613,1.6170839468638,0.86911767721176,1.2378320097923,0.76076636711756,0.56666135787964,1.7060538132985,1.989039282004,0.46222160259883,2.8829723596573,1.522034406662,1.6785686214765,1.3194754719734,-0.27601172526677,2.3135915398598,2.1569107969602,1.3207445542018,1.7350862423579,2.2957200805346,1.7132312059402,1.6026596228282,1.4820297559102,1.2750029563904,2.0872130990028,0.10649114847183,-0.57467569907506,0.61338394880295,0.44882794221242,0.88752309481303,0.31911830107371,1.0494391123454,0.97641597191493,2.0663912097613,1.9734501838684,2.1910121043523,-0.20639101664225,0.87821235259374,1.6725783546766,1.6222546497981,0.96633036931356,0.84717820088069,0.75437128543854,0.74399262666702,1.197357972463,0.059763590494792,0.48934419949849,1.0515054066976,0.8251816034317,1.0892674326897,1.0736261804899,0.893900791804,0.94113498926163,0.77776362498601,0.28362373510997,-0.56825081507365,0.69348265727361,0.62337766091029,2.1508460243543,0.099641581376394,0.4383126894633,0.86211909850438,0.55464108784993,-0.39811432361603,0.56322664022446,0.49056361118952,-0.52648534377416,1.1210689942042,1.8514394760132,0.89052816232045,0.44693052768707,0.45961141586304,1.0248149434725,2.1499122182528,-0.034429132938385,1.1538316806157,0.35968919595083,0.52035848299662,0.83373486995697,-3.4153784513474,-0.76397508382797,0.99678585926692,0.46436736981074,1.4077772696813,0.53677211205165,-0.091465810934703,2.5614798069,0.64048419396083,1.9290720423063,0.84489583969116,0.70445984601974,0.46191364526749,0.83422909180323,1.0964795947075,-0.38400540749232,0.9785865743955,1.4994541803996,0.23493419090907,0.72208046913147,1.1987189451853,1.0340039928754,0.49584358930588,0.9734034538269,0.86977332830429,0.13170391321182,0.67438185214996,-0.027616818745931,0.73496749003728,-0.15795479218165,-0.25147199630737,0.24109085400899,0.81488490104675,-0.26227037111918,1.0585611065229,1.1508588989576,0.041683514912923,0.35604586203893,0.83611657222112,0.32901267210642,-0.4398375749588,1.0347788532575,0.45141826073329,0.66549330949783,1.6335149606069,0.12993812561035,0.47622621059418,0.80798317988714,0.13730426629384,1.3288905223211,0.70014347632726,0.81123908360799,0.61424573262533,0.18615275621414,-0.6625751654307,-0.20114580790202,0.94296038150787,0.5546510219574,0.093549489974976,0.041663646697998,1.1136258641879,0.93235075473785,0.82418819268545,1.2272248665492,-0.018743177254995,1.1353020866712,1.0018274188042,0.20987540483475,0.78178197145462,1.6269485155741,1.1795808871587,0.45340011517207,-0.23090094327927,0.87155898412069,0.94503412644068,0.13853857914607,0.40755172570546,0.19342948993047,-0.3140519062678,0.56604544321696,-0.40191411972046,-0.23073703050613,-0.57812035083771,0.73785086472829,0.51420678695043,0.65655509630839,-0.17468631267548,-0.19894788662593,-0.30287106831868,0.11042257150014,-0.41270752747854,0.27900685866674,1.2798433502515,0.98335991303126,1.1875107884407,-0.58005253473918,-0.65427521864573,1.3371109962463,0.20237267017365,0.3809779882431,0.41799743970235,0.39591391881307,0.27305881182353,0.25413433710734,0.7378359635671,0.6482203801473,-0.23935238520304,-0.016398727893829,-0.064633786678314,-0.18520404895147,-0.019416213035583,0.35423537095388,0.4630908370018,0.51046162843704,0.95543016990026,-0.23709734280904,0.16425549983978,0.0035216410954793,0.33152600129445,0.53954621156057,-0.81746280193329,0.90037534634272,0.733382999897,0.17389903465907,0.37627418835958,0.54881225029627,0.31307339668274,0.79248597224553,1.049297551314,0.72302420934041,0.1024454832077,0.24174402157466,0.90014934539795,-0.48887977997462,0.39432694514592,0.066176056861877,-0.84255635738373,0.53713967402776,0.099532306194305,-0.32995641231537,0.12315064668655,0.54334352413813,-0.27369459470113,-0.12675921122233,0.96611926952998,-0.35692503054937,-0.42153149843216,1.3494963447253,0.39602567752202,-0.14533847570419,0.28437127669652,-0.72952111562093,0.14343857765198,-1.7826259334882,-0.25772551695506,-0.78980376323064,-0.41795273621877,-0.45081973075867,0.72576353947322,0.39849430322647,0.46335905790329,0.39068857828776,-0.14312813679377,-0.50680339336395,0.31088044246038,1.1357540885607,-1.0011171301206,-0.10927766561508,-1.063550511996,-0.80274045467377,-1.369963089625,-0.60518085956573,-0.49855560064316,0.65690527359645,-0.32900770505269,-0.80828368663788,-0.33526867628098,0.97014506657918,0.50582985083262,-1.0989879568418,-0.75103342533112,-0.75822571913401,-1.3009111086528,-0.68828960259755,-0.27480473121007,-1.3274674614271,-0.3897820909818,-0.63591947158178,-0.86141377687454,0.7379228870074,-0.65485388040543,-0.58671583731969,-0.34419695536296,0.92106312513351,-0.52583962678909,-0.75173377990723,-3.9630035559336,-2.0255669752757,-0.17404804627101,0.36553293466568,-0.77159702777863,-1.2969250480334,-1.1237785220146,-0.83169837792714,-0.48923244078954,-1.61179403464,-0.40660301844279,-1.3272936145465,-0.54328391949336,-0.84843238194784,-0.89787691831589,-0.99821885426839,-0.38929283618927,0.20160774389903,-0.21600474913915,-0.090229014555613,-1.1228596170743,-0.89063495397568,-0.25641173124313,-1.4268358548482,0.084611276785533,-0.057399272918701,1.1498183012009,-0.36793202161789,-1.7740353941917,-0.79335769017537,-0.4536360502243,-0.31404693921407,-0.0015323360761007,0.19280115763346,-0.70752203464508,-0.49979488054911,-1.222791771094,-0.63318262497584,1.1111597220103,-1.3750915726026,-0.81966817378998,-1.5684093038241,-1.4833733439445,-0.74334194262822,-1.2061074376106,0.7746567328771,-0.9716326991717,-2.1784057219823,-1.005823413531,-1.2070114612579,-1.4665474494298,-0.70734570423762,-0.97879519065221,-1.2652799487114,-0.98964820305506,-1.0022819042206,-1.503807802995,-0.33034384250641,-0.29567629098892,-0.40124108393987,-0.83112716674805,-0.83289295434952,-1.0331595937411,-0.28516848882039,-0.94201415777206,-0.15465170145035,-1.5429258346558,-1.0719150304794,-0.78518688678741,-0.89260935783386,-1.9667521119118,0.32372027635574,-1.2640630205472,-0.2280001839002,-1.6157006223996,-0.65714369217555,-0.36828219890594,-1.8160541852315,-1.6817028323809,-0.80755601326625,-0.87957582871119,-0.51121413707733,-1.6007274389267,-0.12250244617462,-1.1513183514277,0.14137476682663,-1.3877550760905,-1.0348310073217,-0.61562657356262,-0.30985722939173,-0.72811295588811,-1.3128022352854,-2.4416819214821,-1.3699357708295,-0.091383854548136,-0.18591185410817,0.30504415432612,-0.45950462420781,-0.11816869179408,-0.56033581495285,-0.1869723200798,-0.10232130686442,-0.86313486099243,-1.6423066457113,-1.1141051848729,-1.9939343134562,-1.5953680078189,-0.57856986920039,-1.7222811778386,-2.087044219176,-2.5285258889198,-1.4033665259679,-1.7584462960561,-1.3855298360189,-0.16359736522039,-1.1347259084384,-1.7184764146805,-1.7710129419963,-1.2502471605937,-0.84991256395976,0.19727398951848,-0.96291800340017,-0.24834523598353,1.0447899500529,-0.082621971766154]}')}}]);