"use strict";(self.webpackChunk_zooniverse_classifier=self.webpackChunk_zooniverse_classifier||[]).push([[5193],{"./src/plugins/tasks/multiple/components/MultipleChoiceTask.stories.jsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,WithAnnotation:()=>WithAnnotation,__namedExportsOrder:()=>__namedExportsOrder,default:()=>MultipleChoiceTask_stories});var async_states=__webpack_require__("../lib-async-states/src/async-states.js"),async_states_default=__webpack_require__.n(async_states),react=__webpack_require__("../../node_modules/react/index.js"),components=__webpack_require__("./src/stories/components/index.js"),MultipleChoiceTask=__webpack_require__("./src/plugins/tasks/multiple/components/MultipleChoiceTask.jsx");const components_mockTask={answers:[{label:"sleeping"},{label:"playing"},{label:"looking indifferent"}],required:!1,strings:{help:"Pick as many answers as apply, then press Done.",question:"What is it doing?","answers.0.label":"sleeping","answers.1.label":"playing","answers.2.label":"looking indifferent"},taskKey:"T1",type:"multiple"};var jsx_runtime=__webpack_require__("../../node_modules/react/jsx-runtime.js");function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _defineProperty(e,r,t){return(r=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(r))in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}const MultipleChoiceTask_stories={title:"Tasks / Multiple Choice Question",component:MultipleChoiceTask.A,args:{isThereTaskHelp:!0,required:!1,subjectReadyState:async_states_default().success},argTypes:{subjectReadyState:{control:{type:"select",options:async_states_default()}}}};function Default(_ref){var isThereTaskHelp=_ref.isThereTaskHelp,required=_ref.required,subjectReadyState=_ref.subjectReadyState,tasks={T1:_objectSpread(_objectSpread({},components_mockTask),{},{required,strings:_objectSpread(_objectSpread({},components_mockTask.strings),{},{help:isThereTaskHelp?"Pick as many answers as apply, then press Done.":""})})};return(0,jsx_runtime.jsx)(components.W,{isThereTaskHelp,subjectReadyState,tasks})}function WithAnnotation(_ref2){var isThereTaskHelp=_ref2.isThereTaskHelp,required=_ref2.required,subjectReadyState=_ref2.subjectReadyState,tasks={T1:_objectSpread(_objectSpread({},components_mockTask),{},{required,strings:_objectSpread(_objectSpread({},components_mockTask.strings),{},{help:isThereTaskHelp?"Pick as many answers as apply, then press Done.":""})})};return(0,react.useEffect)((function(){components.W.store.classifications.addAnnotation(tasks.T1,[0,2])}),[]),(0,jsx_runtime.jsx)(components.W,{isThereTaskHelp,subjectReadyState,tasks})}Default.displayName="Default",WithAnnotation.displayName="WithAnnotation",Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"function Default({\n  isThereTaskHelp,\n  required,\n  subjectReadyState\n}) {\n  const tasks = {\n    T1: {\n      ...mockTask,\n      required,\n      strings: {\n        ...mockTask.strings,\n        help: isThereTaskHelp ? 'Pick as many answers as apply, then press Done.' : ''\n      }\n    }\n  };\n  return <MockTask isThereTaskHelp={isThereTaskHelp} subjectReadyState={subjectReadyState} tasks={tasks} />;\n}",...Default.parameters?.docs?.source}}},WithAnnotation.parameters={...WithAnnotation.parameters,docs:{...WithAnnotation.parameters?.docs,source:{originalSource:"function WithAnnotation({\n  isThereTaskHelp,\n  required,\n  subjectReadyState\n}) {\n  const tasks = {\n    T1: {\n      ...mockTask,\n      required,\n      strings: {\n        ...mockTask.strings,\n        help: isThereTaskHelp ? 'Pick as many answers as apply, then press Done.' : ''\n      }\n    }\n  };\n  useEffect(() => {\n    MockTask.store.classifications.addAnnotation(tasks.T1, [0, 2]);\n  }, []);\n  return <MockTask isThereTaskHelp={isThereTaskHelp} subjectReadyState={subjectReadyState} tasks={tasks} />;\n}",...WithAnnotation.parameters?.docs?.source}}};const __namedExportsOrder=["Default","WithAnnotation"]}}]);